syntax = "proto3";

package protobuf.opencb;

option java_outer_classname = "VariantHBase";
option java_generate_equals_and_hash = true;
option java_multiple_files = true;
option java_package = "org.opencb.opencga.storage.hadoop.variant.models.protobuf";

import "protobuf/opencb/variant.proto";
import "google/protobuf/struct.proto";


/**
 * Mapping a ComplexGenotype to an individual (sample index)
 * Column <STUDY>_X
 */
message ComplexVariant {
    repeated AlternateCoordinate secondaryAlternates = 1;
    map<int32,string> sampleToGenotype = 2;
}

/**
 * Column <STUDY>_F
 */
message ComplexFilter {
    map<string, SampleList> filterNonPass = 1;
}

/**
 * Other sample data
 * Column <STUDY>_<SAMPLE>_SX
 */
message OtherSampleData {
    map<string, string> sampleData = 1;
    FileEntry file = 2;
}


message SampleList {
    repeated uint32 sampleIds = 1 [packed = true];
}

/**
 * Element stored at the Archive table, under _V column
 */
message VariantTableStudyRowProto {

    uint32 start = 1;
    string reference = 2;
    string alternate = 3;
    VariantType type = 4;


    uint32 homRefCount = 5;                         // 0/0
    repeated uint32 het = 6 [packed = true];        // 0/1
    repeated uint32 homVar = 7 [packed = true];     // 1/1
    repeated uint32 nocall = 8 [packed = true];     // .
    repeated uint32 other = 9 [packed = true];      // ?  ->  1/2, ./1, ...

    map<string, SampleList> otherGt = 10;

    repeated AlternateCoordinate secondaryAlternate = 11;

    uint32 passCount = 12;
    uint32 callCount = 13;

    map<string, SampleList> filterNonPass = 14;
}

message VariantTableStudyRowsProto  {
    repeated VariantTableStudyRowProto rows = 1;
    int64 timestamp = 2;
}
