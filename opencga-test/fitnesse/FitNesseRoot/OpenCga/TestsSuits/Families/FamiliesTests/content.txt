!define TEST_SYSTEM {slim}
!3 Generate Random Variables
!| Table: Rest Fixture | $baseURL |
| let | familyName | js | Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5) | |
| let | familyName2 | js | Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5) | |
| let | fatherName | js | Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5) | |
| let | motherName | js | Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5) | |
| let | updatedName | js | Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5) | |
| let | iName | js | Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5) | |
| let | asName | js | Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5) | |
| let | asName2 | js | Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5) | |

!3 Login User A
!| Table: Rest Fixture | $baseURL |
| setBody | {"password" : "p@ssword"} |
| setHeader | Content-Type:application/json |
| POST | /v1/users/$userA/login | 200 | Content-Type: application/json | |
| let | sessionIdUserA | js | response.jsonbody.response[0].result[0].sessionId | |

!3 Create Individual
!| Table: Rest Fixture | $baseURL |
| setBody | {"name" : "$iName" } |
| setHeader | Content-Type:application/json |
| POST | /v1/individuals/create?sid=$sessionIdUserA&study=$study | 200 | Content-Type: application/json | |
| let | individualId | js | response.jsonbody.response[0].result[0].id | |

!3 Create First Family
!| Table: Rest Fixture | $baseURL |
| setBody | {"name": "$familyName",  "members": [{"name": "father"}, {"name": "mother"},{"name": "son","father" : "father","mother" : "mother"}]} |
| setHeader | Content-Type:application/json |
| POST | /v1/families/create?sid=$sessionId&study=$study | 200 | Content-Type: application/json | |
| let | familyId | js | response.jsonbody.response[0].result[0].id | |

!3 Search Father
!| Table: Rest Fixture | $baseURL |
| GET | /v1/individuals/search?sid=$sessionId&study=$study&name=father | 200 | Content-Type: application/json | |
| let | fatherId | js | response.jsonbody.response[0].result[0].id | |

!3 Search Mother
!| Table: Rest Fixture | $baseURL |
| GET | /v1/individuals/search?sid=$sessionId&study=$study&name=mother | 200 | Content-Type: application/json | |
| let | motherId | js | response.jsonbody.response[0].result[0].id | |

!3 Search Son
!| Table: Rest Fixture | $baseURL |
| GET | /v1/individuals/search?sid=$sessionId&study=$study&name=son | 200 | Content-Type: application/json | |
| let | sonId | js | response.jsonbody.response[0].result[0].id | |

!3 Create Dummy Family
!| Table: Rest Fixture | $baseURL |
| setBody | {"name": "familyName",  "members": [{"name": "father"}, {"name": "mother"},{"name": "son"}]} |
| setHeader | Content-Type:application/json |
| POST | /v1/families/create?sid=$sessionId&study=$study | 200 | Content-Type: application/json | |
| let | dummyFamilyId | js | response.jsonbody.response[0].result[0].id | |

!3 Get Project Release
!| Table: Rest Fixture | $baseURL |
| setHeader | Content-Type:application/json |
| GET | /v1/projects/$projectId/info?sid=$sessionId | 200 | Content-Type: application/json | |
| let | releaseNumber | js | response.jsonbody.response[0].result[0].currentRelease | |

!3 Increment Project Release
!| Table: Rest Fixture | $baseURL |
| setHeader | Content-Type:application/json |
| POST | /v1/projects/$projectId/increlease?sid=$sessionId | 200 | Content-Type: application/json | jsonbody.response[0].result[0] > "$releaseNumber" |
| let | currentRelease | js | $releaseNumber + 1 | |

!3 Create Second Family
!| Table: Rest Fixture | $baseURL |
| setBody | {"name": "$familyName2",  "members": [{"name": "father"}, {"name": "mother"},{"name": "son","father" : "father","mother" : "mother"}]} |
| setHeader | Content-Type:application/json |
| POST | /v1/families/create?sid=$sessionIdUserA&study=$study | 200 | Content-Type: application/json | |
| let | familyId2 | js | response.jsonbody.response[0].result[0].id | |

!3 Get First Family
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId/info?sid=$sessionId | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result[0].id == '$familyId' |

!3 Get Family Info As Anonymous
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId/info | 403 | Content-Type: application/json | jsonbody.error != '' |

!3 Create VIEW_FAMILIES ACL For Study
!| Table: Rest Fixture | $baseURL |
| setBody | {  "permissions" : "VIEW_FAMILIES",  "action": "SET",  "study": "$studyId"} |
| setHeader | Content-Type:application/json |
| POST | /v1/studies/acl/*/update?sid=$sessionId | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result[0].permissions[0] == 'VIEW_FAMILIES' |

!3 Get Family Info As Anonymous
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId/info | 200 | Content-Type: application/json | jsonbody.error === ''  && jsonbody.response[0].result[0].id == '$familyId' |

!3 Delete VIEW_FAMILIES ACL For Study
!| Table: Rest Fixture | $baseURL |
| setBody | {  "permissions" : "VIEW_FAMILIES",  "action": "REMOVE",  "study": "$studyId"} |
| setHeader | Content-Type:application/json |
| POST | /v1/studies/acl/*/update?sid=$sessionId | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result[0].permissions.length == '0.0' |

!3 Get Family Info As Anonymous
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId/info | 403 | Content-Type: application/json | jsonbody.error != '' |

!3 Create Family ACL For Ananomous
!| Table: Rest Fixture | $baseURL |
| setBody | {"permissions": "VIEW", "action":"SET", "family": "$familyId"} |
| setHeader | Content-Type:application/json |
| POST | /v1/families/acl/*/update?sid=$sessionId | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result[0].permissions[0] == 'VIEW' |

!3 Get Family Info As Anonymous
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId/info | 200 | Content-Type: application/json | jsonbody.error === ''  && jsonbody.response[0].result[0].id == '$familyId' |

!3 Delete Family ACL For Ananomous
!| Table: Rest Fixture | $baseURL |
| setBody | { "action":"RESET", "family": "$familyId"} |
| setHeader | Content-Type:application/json |
| POST | /v1/families/acl/*/update?sid=$sessionId | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result.length == '0.0' |

!3 Get Family Info As Anonymous
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId/info | 403 | Content-Type: application/json | jsonbody.error != '' |

!3 Get Two Families
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId,$familyId2/info?sid=$sessionId | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result[0].id == '$familyId' && jsonbody.response[1].result[0].id == '$familyId2' |

!3 Get Two Families in Reverse Order
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId2,$familyId/info?sid=$sessionId | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result[0].id == '$familyId2' && jsonbody.response[1].result[0].id == '$familyId' |

!3 Get Multiple Families With One Invalid Entry
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId,$familyId2,000/info?sid=$sessionId | 500 | Content-Type: application/json | |

!3 Get Multiple Families With One Invalid Entry And Silent True
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId,$familyId2,000/info?sid=$sessionId&silent=true | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result[0].id == '$familyId' && jsonbody.response[1].result[0].id == '$familyId2' &&  jsonbody.response[2].errorMsg == "org.opencb.opencga.catalog.exceptions.CatalogAuthorizationException: Permission denied. User '$user' cannot VIEW Family { id: -1 }" |

!3 Update First Family
!| Table: Rest Fixture | $baseURL |
| setBody | {"name" : "$updatedName"} |
| setHeader | Content-Type:application/json |
| POST | /v1/families/$familyId/update?sid=$sessionId&study=$study | 200 | Content-Type: application/json | |

!3 Get First Family After Update
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId/info?sid=$sessionId | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result[0].id == '$familyId' && jsonbody.response[0].result[0].name == '$updatedName' |

!3 Search First Family By Name
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/search?sid=$sessionId&study=$study&name=$updatedName | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result[0].id == '$familyId' |

#this test should fail as the individual has not proper mother and father to get eligible to be part of this family

!3 (Neagtive) Update Second Family
!| Table: Rest Fixture | $baseURL |
| setBody | {"members": [{"name": "father"},{"name": "mother"},{"name": "son"},{"name":"$iName"}]} |
| setHeader | Content-Type:application/json |
| POST | /v1/families/$familyId2/update?sid=$sessionId&study=$study | 500 | Content-Type: application/json | |

!3 Update Individual
!| Table: Rest Fixture | $baseURL |
| setBody | { "father" : "father", "mother" :"mother"} |
| setHeader | Content-Type:application/json |
| POST | /v1/individuals/$individualId/update?sid=$sessionId | 200 | Content-Type: application/json | |

#| POST | /v1/individuals/$individualId/update?sid=$sessionId |200|  Content-Type: application/json |jsonbody.error == '' && jsonbody.response[0].result[0].father.id == '$fatherId' && jsonbody.response[0].result[0].mother.id == '$motherId'|''

!3 Update Second Family
!| Table: Rest Fixture | $baseURL |
| setBody | {"members": [{"name": "father"},{"name": "mother"},{"name": "son"},{"name":"$iName"}]} |
| setHeader | Content-Type:application/json |
| POST | /v1/families/$familyId2/update?sid=$sessionId&study=$study | 200 | Content-Type: application/json | |

!3 Search Second Family By Name After Update
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/search?sid=$sessionId&study=$study&name=$familyName2 | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result[0].id == '$familyId2' && jsonbody.response[0].result[0].members.length == '4' |

!3 Get First Family ACL
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId/acl?sid=$sessionId | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result.length == '0.0' |

!3 Update (Create) First Family ACL (SET)
!| Table: Rest Fixture | $baseURL |
| setBody | {  "permissions": "VIEW",  "action": "SET",  "family": "$familyId"} |
| setHeader | Content-Type:application/json |
| POST | /v1/families/acl/$userA/update?sid=$sessionId | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result[0].member == '$userA' && jsonbody.response[0].result[0].permissions[0] == 'VIEW' |

!3 Update First Family ACL (ADD)
!| Table: Rest Fixture | $baseURL |
| setBody | {  "permissions": "DELETE",  "action": "ADD",  "family": "$familyId"} |
| setHeader | Content-Type:application/json |
| POST | /v1/families/acl/$userA/update?sid=$sessionId | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result[0].member == '$userA' && jsonbody.response[0].result[0].permissions.length == '2.0' |

!3 Update First Family ACL (REMOVE)
!| Table: Rest Fixture | $baseURL |
| setBody | {  "permissions": "DELETE",  "action": "REMOVE",  "family": "$familyId"} |
| setHeader | Content-Type:application/json |
| POST | /v1/families/acl/$userA/update?sid=$sessionId | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result[0].member == '$userA' && jsonbody.response[0].result[0].permissions.length == '1.0' |

!3 Get Member ACL
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId/acl?sid=$sessionId&member=$userA | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result[0].member == '$userA' && jsonbody.response[0].result[0].permissions[0] == 'VIEW' |

!3 Get First Family ACL
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId/acl?sid=$sessionId | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result.length == '1.0' |

!3 Get Second Family ACL
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId2/acl?sid=$sessionId | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result.length == '0.0' |

!3 Get Two Families ACL
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId,$familyId2/acl?sid=$sessionId&study=$study | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].id == '$familyId' && jsonbody.response[1].id == '$familyId2' |

!3 Get Two Families ACL In Reverse
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId2,$familyId/acl?sid=$sessionId&study=$study | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].id == '$familyId2' && jsonbody.response[1].id == '$familyId' |

!3 Get Multiple Families ACL With One Invalid Entry
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId,$familyId2,000/acl?sid=$sessionId&study=$study | 500 | Content-Type: application/json | |

!3 Get Multiple Families ACL With One Invalid Entry With Silent True
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId,000,$familyId2/acl?sid=$sessionId&study=$study&silent=true | 200 | Content-Type: application/json | |

!3 Search All Families
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/search?sid=$sessionId&study=$study | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result.length > '0.0' |

!3 (Negative) Get Non-Existing Family
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/5425/info?sid=$sessionId | 500 | Content-Type: application/json | jsonbody.error == 'Family id \'5425\' does not exist' |

!3 (Negative) Get Non-Existing Family ACL
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/25152/acl?sid=$sessionId | 500 | Content-Type: application/json | jsonbody.error == 'Family id \'25152\' does not exist' |

# Deprecated annotation web services will be removed keeping them for legacy checks

!3 Create Annotation Set
!| Table: Rest Fixture | $baseURL |
| setBody | {  "name": "$asName",  "annotations": {"var_int": "10"}} |
| setHeader | Content-Type:application/json |
| POST | /v1/families/$familyId/annotationsets/create?sid=$sessionId&variableSetId=$gVariableSetId&study=$studyId | 200 | Content-Type : application/json | jsonbody.response[0].result.length == 1 && jsonbody.response[0].result[0].annotations["var_int"] == '10' &&  jsonbody.response[0].result[0].annotations["var_double"] == '20.5' |
| let | annotationSetName | js | response.jsonbody.response[0].result[0].name | |

!3 Create Annotation Set
!| Table: Rest Fixture | $baseURL |
| setBody | { "annotationSets": [ {   "name": "string",          "variableSetId": $gVariableSetId,          "annotations": {"var_int": "10"} } ]} |
| setHeader | Content-Type:application/json |
| POST | /v1/families/$familyId/update?sid=$sessionId&study=$studyId | 200 | Content-Type : application/json | |

!3 Create Annotation Set Using Variable Set Name
!| Table: Rest Fixture | $baseURL |
| setBody | {  "name": "$asName2",  "annotations": {"var_int": "50"}} |
| setHeader | Content-Type:application/json |
| POST | /v1/families/$familyId/annotationsets/create?sid=$sessionId&variableSet=$gvsName&study=$studyId | 200 | Content-Type : application/json | jsonbody.response[0].result.length == 1 && jsonbody.response[0].result[0].annotations["var_int"] == '50' &&  jsonbody.response[0].result[0].annotations["var_double"] == '20.5' |

!3 (Negative) Create Annotation Set with Invalid Data Type
!| Table: Rest Fixture | $baseURL |
| setBody | {  "name": "dummyName",  "annotations": {"var_int": "TRUE"}} |
| setHeader | Content-Type:application/json |
| POST | /v1/families/$familyId/annotationsets/create?sid=$sessionId&variableSetId=$gVariableSetId&study=$studyId | 500 | Content-Type : application/json | jsonbody.error == 'Value TRUE is not an integer number' |

!3 Get Annotation Set
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId/annotationsets/?name=$annotationSetName&sid=$sessionId | 200 | Content-Type: application/json | jsonbody.response[0].result[0].name == '$annotationSetName' |

!3 Search Annotation Set
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId/annotationsets/search?sid=$sessionId | 500 | Content-Type: application/json | jsonbody.error == 'Missing variableSet parameter' |
| GET | /v1/families/$familyId/annotationsets/search?sid=$sessionId&variableSet=$gVariableSetId | 200 | Content-Type: application/json | jsonbody.response[0].result.length == '2' |

!3 Search Annotation Set By Annotation
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId/annotationsets/search?sid=$sessionId&variableSet=$gVariableSetId&annotation=var_int=9 | 200 | Content-Type: application/json | jsonbody.response[0].result.length == '0' |
| GET | /v1/families/$familyId/annotationsets/search?sid=$sessionId&variableSet=$gVariableSetId&annotation=var_int=10 | 200 | Content-Type: application/json | jsonbody.response[0].result.length == '2' |
| GET | /v1/families/$familyId/annotationsets/search?sid=$sessionId&variableSet=$gVariableSetId&annotation=var_int=20.5 | 500 | Content-Type: application/json | jsonbody.response[0].error != '' |

!3 Update Annotation Set
!| Table: Rest Fixture | $baseURL |
| setBody | {"var_double": "100.50"} |
| setHeader | Content-Type:application/json |
| POST | /v1/families/$familyId/annotationsets/$annotationSetName/update?sid=$sessionId&study=$studyId | 200 | Content-Type : application/json | |

# https://github.com/opencb/opencga/commit/41d44fe94d86d3b94a419ebe6d7ba951469acd27

!3 Apply Empty Update On Annotation Set
!| Table: Rest Fixture | $baseURL |
| setBody | {} |
| setHeader | Content-Type:application/json |
| POST | /v1/families/$familyId/annotationsets/$annotationSetName/update?sid=$sessionId&study=$studyId | 200 | Content-Type : application/json | |

!3 Get Annotation Set After Update
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId/annotationsets?name=$annotationSetName&sid=$sessionId | 200 | Content-Type: application/json | jsonbody.response[0].result[0].annotations["var_double"] == '100.5' |

!3 Delete Annotation Set
!| Table: Rest Fixture | $baseURL |
| setHeader | Content-Type:application/json |
| GET | /v1/families/$familyId/annotationsets/$asName2/delete?sid=$sessionId&study=$studyId | | Content-Type : application/json | |

!3 Delete Annotation Set Created With VS Name
!| Table: Rest Fixture | $baseURL |
| setHeader | Content-Type:application/json |
| GET | /v1/families/$familyId/annotationsets/$annotationSetName/delete?sid=$sessionId&study=$studyId | 200 | Content-Type : application/json | |

!3 Search Annotation Set After Delete
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId/annotationsets/search?sid=$sessionId&variableSet=$gVariableSetId | | Content-Type: application/json | |
| GET | /v1/families/$familyId/annotationsets/search?sid=$sessionId&variableSet=$gVariableSetId | 200 | Content-Type: application/json | jsonbody.response[0].result.length == '0.0' |

#################### new annotation

!3 Create Annotation Set
!| Table: Rest Fixture | $baseURL |
| setBody | { "annotationSets": [ {   "name": "string",          "variableSetId": $gVariableSetId,          "annotations": {"var_int": "10", "var_double": "175.58"} } ]} |
| setHeader | Content-Type:application/json |
| POST | /v1/families/$familyId/update?sid=$sessionId&study=$studyId | 200 | Content-Type : application/json | |

!3 Create Annotation Set
!| Table: Rest Fixture | $baseURL |
| setBody | { "annotationSets": [ {   "name": "string",          "variableSetId": $gVariableSetId,          "annotations": {"var_int": "10", "var_double": "175.58"} } ]} |
| setHeader | Content-Type:application/json |
| POST | /v1/families/$dummyFamilyId/update?sid=$sessionId&study=$studyId | 200 | Content-Type : application/json | |

!3 Search Annotation Set By Annotation
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId/annotationsets/search?sid=$sessionId&variableSet=$gVariableSetId&annotation=var_int=10 | 200 | Content-Type: application/json | |

!3 Create Nested Annotation
!| Table: Rest Fixture | $baseURL |
| setBody | {  "annotationSets": [{"name": "Testing", "variableSetId": $gVariableSetId2, "annotations": { "outer_var" : [{"inner_first_var":1000.57 , "inner_second_var":2000}]}}]} |
| setHeader | Content-Type:application/json |
| POST | /v1/families/$familyId/update?sid=$sessionId | 200 | Content-Type: application/json | jsonbody.response[0].result[0].annotationSets.length == 2 |

!3 Search Annotation Set By Variable Set
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/search?sid=$sessionId&study=$study | | Content-Type: application/json | |
| GET | /v1/families/search?sid=$sessionId&study=$study&annotation=variableSet=$gVariableSetId | | Content-Type: application/json | jsonbody.response[0].numTotalResults == 2 |
| GET | /v1/families/search?sid=$sessionId&study=$study&annotation=variableSet!=$gVariableSetId | | Content-Type: application/json | jsonbody.response[0].result[0].id == $familyId2 |
| GET | /v1/families/search?sid=$sessionId&study=$study&annotation=variableSet=$gVariableSetId2 | | Content-Type: application/json | jsonbody.response[0].result[0].annotationSets.length == 2 |
| GET | /v1/families/search?sid=$sessionId&study=$study&annotation=variableSet!=$gVariableSetId2 | | Content-Type: application/json | jsonbody.response[0].numTotalResults == 2 |

!3 Search Annotation Set By Annotation
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/search?sid=$sessionId&study=$study&annotation=annotationSet=Testing | | Content-Type: application/json | |
| GET | /v1/cohorts/search?sid=$sessionId&study=$study&annotation=annotationSet=Testing | | Content-Type: application/json | jsonbody.response[0].result[0].annotationSets.length == 2 |

!3 Search Annotation Set By Annotation
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/search?sid=$sessionId&study=$study&annotation=annotationSet=string | | Content-Type: application/json ||
| GET | /v1/families/search?sid=$sessionId&study=$study&annotation=annotationSet=string | | Content-Type: application/json | jsonbody.response[0].result[0].annotationSets.length == 2 |


!3 Search Annotation Set By Annotation With Exclude
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/search?sid=$sessionId&study=$study&annotation=annotationSet=Testing&exclude=annotationSet.Testing | | Content-Type: application/json | jsonbody.response[0].result[0].annotationSets.length == 1 && jsonbody.response[0].result[0].annotationSets[0].name == "string" |

!3 Delete Variable In Annotation
!| Table: Rest Fixture | $baseURL |
| setBody | {"annotationSets":[{"name": "string", "variableSetId": "$gVariableSetId",  "annotations": {"var_int": "10"}}]} |
| setHeader | Content-Type:application/json |
| POST | /v1/individuals/$familyId/update?sid=$sessionId&deleteVariable=string:var_int | 500 | Content-Type: application/json | |
| POST | /v1/families/$familyId/update?sid=$sessionId&deleteVariable=string:var_double | 200 | Content-Type: application/json | |

!3 Delete Annotation
!| Table: Rest Fixture | $baseURL |
| setBody | {} |
| setHeader | Content-Type:application/json |
| POST | /v1/families/$familyId/update?sid=$sessionId&deleteAnnotationSet=string | 200 | Content-Type: application/json | jsonbody.response[0].result[0].annotationSets[0].name == "Testing" |

!3 Get Flatten Annotation
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/search?sid=$sessionId&study=$study&annotation=annotationSet=Testing&flattenAnnotations=true | | Content-Type: application/json | jsonbody.response[0].result[0].annotationSets[0].annotations["outer_var.inner_second_var"][0] == 2000 && jsonbody.response[0].result[0].annotationSets[0].annotations["outer_var.inner_first_var"][0] == 1000.57 |

!3 Get Standard Annotation (Not Flatten)
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/search?sid=$sessionId&study=$study&annotation=annotationSet=Testing&flattenAnnotations=false | | Content-Type: application/json | jsonbody.response[0].result[0].annotationSets[0].annotations["outer_var"][0]["inner_first_var"] == 1000.57  && jsonbody.response[0].result[0].annotationSets[0].annotations["outer_var"][0]["inner_second_var"] == 2000 |

################

#       --------------------

#      | Release1 |Release2 |

#           |--------------------|

#      |  Fa1,I1  |         |Snapshot1

#      |--------------------|

#      | Fa2      |Fb1      |Snapshot2

#      |          |         |

#       --------------------

!3 Get First Snap Shot
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/search?sid=$sessionId&study=$study&snapshot=$releaseNumber | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result[0].id =='$familyId' && jsonbody.response[0].result.length =='2' |

!3 Get Snap Shot 2
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/search?sid=$sessionId&study=$study&snapshot=$currentRelease | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result.length =='3' |

!3 Get Release 1
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/search?sid=$sessionId&study=$study&release=$releaseNumber | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result.length =='2' |

!3 Get Release 2
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/search?sid=$sessionId&study=$study&release=$currentRelease | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result[0].id  =='$familyId2' && jsonbody.response[0].result.length == '1'  && jsonbody.response[0].result[0].version =='1' |

!3 Get Release > 1
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/search?sid=$sessionId&study=$study&release=%3E$releaseNumber | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result[0].id  =='$familyId2' && jsonbody.response[0].result.length == '1'  && jsonbody.response[0].result[0].version =='1' |

!3 Get Release > 2
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/search?sid=$sessionId&study=$study&release=%3E$currentRelease | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result.length =='0' |

!3 Get Release < 2
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/search?sid=$sessionId&study=$study&release=%3C$currentRelease | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result.length =='2' |

!3 Delete Individual
!| Table: Rest Fixture | $baseURL |
| GET | /v1/individuals/$individualId/delete?sid=$sessionId&study=$study | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result[0].id == '$individualId' |

!3 Delete Father
!| Table: Rest Fixture | $baseURL |
| GET | /v1/individuals/$fatherId/delete?sid=$sessionId&study=$study | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result[0].id == '$fatherId' |

!3 Delete Son
!| Table: Rest Fixture | $baseURL |
| GET | /v1/individuals/$sonId/delete?sid=$sessionId&study=$study | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result[0].id == '$sonId' |

!3 Delete Mother
!| Table: Rest Fixture | $baseURL |
| GET | /v1/individuals/$motherId/delete?sid=$sessionId&study=$study | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result[0].id == '$motherId' |

#update this after delete fun is properly implemented.

!3 Get First Family
!| Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId/info?sid=$sessionId | 200 | Content-Type: application/json | jsonbody.error == '' |

!3 Search Deleted Individual
!| Table: Rest Fixture | $baseURL |
| GET | /v1/individuals/search?sid=$sessionId&study=$study&name=$individualId | 200 | Content-Type: application/json | jsonbody.error == '' && jsonbody.response[0].result.length == '0' |
