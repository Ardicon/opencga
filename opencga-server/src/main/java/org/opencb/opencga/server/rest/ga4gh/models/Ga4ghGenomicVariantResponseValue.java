/*
 * GA4GH Beacon API Specification
 * A Beacon is a web service for genetic data sharing that can be queried for  information about variants, individuals or samples.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: beacon@ga4gh.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.opencb.opencga.server.rest.ga4gh.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import javax.validation.Valid;
import javax.validation.constraints.NotNull;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Description pending 
 */
@ApiModel(description = "Description pending ")
@JsonPropertyOrder({
  Ga4ghGenomicVariantResponseValue.JSON_PROPERTY_BEACON_ID,
  Ga4ghGenomicVariantResponseValue.JSON_PROPERTY_API_VERSION,
  Ga4ghGenomicVariantResponseValue.JSON_PROPERTY_ERROR,
  Ga4ghGenomicVariantResponseValue.JSON_PROPERTY_REQUEST,
  Ga4ghGenomicVariantResponseValue.JSON_PROPERTY_RESULTS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2020-03-24T15:12:46.170Z[Europe/London]")
public class Ga4ghGenomicVariantResponseValue   {
  public static final String JSON_PROPERTY_BEACON_ID = "beaconId";
  @JsonProperty(JSON_PROPERTY_BEACON_ID)
  private String beaconId;

  public static final String JSON_PROPERTY_API_VERSION = "apiVersion";
  @JsonProperty(JSON_PROPERTY_API_VERSION)
  private String apiVersion;

  public static final String JSON_PROPERTY_ERROR = "error";
  @JsonProperty(JSON_PROPERTY_ERROR)
  private Ga4ghBeaconError error;

  public static final String JSON_PROPERTY_REQUEST = "request";
  @JsonProperty(JSON_PROPERTY_REQUEST)
  private Ga4ghGenomicVariantRequest request;

  public static final String JSON_PROPERTY_RESULTS = "results";
  @JsonProperty(JSON_PROPERTY_RESULTS)
  private List<Ga4ghVariantsFoundResponse> results = new ArrayList<Ga4ghVariantsFoundResponse>();

  public Ga4ghGenomicVariantResponseValue beaconId(String beaconId) {
    this.beaconId = beaconId;
    return this;
  }

  /**
   * Get beaconId
   * @return beaconId
   **/
  @JsonProperty("beaconId")
  @ApiModelProperty(required = true, value = "")
  @NotNull 
  public String getBeaconId() {
    return beaconId;
  }

  public void setBeaconId(String beaconId) {
    this.beaconId = beaconId;
  }

  public Ga4ghGenomicVariantResponseValue apiVersion(String apiVersion) {
    this.apiVersion = apiVersion;
    return this;
  }

  /**
   * Get apiVersion
   * @return apiVersion
   **/
  @JsonProperty("apiVersion")
  @ApiModelProperty(required = true, value = "")
  @NotNull 
  public String getApiVersion() {
    return apiVersion;
  }

  public void setApiVersion(String apiVersion) {
    this.apiVersion = apiVersion;
  }

  public Ga4ghGenomicVariantResponseValue error(Ga4ghBeaconError error) {
    this.error = error;
    return this;
  }

  /**
   * Get error
   * @return error
   **/
  @JsonProperty("error")
  @ApiModelProperty(value = "")
  @Valid 
  public Ga4ghBeaconError getError() {
    return error;
  }

  public void setError(Ga4ghBeaconError error) {
    this.error = error;
  }

  public Ga4ghGenomicVariantResponseValue request(Ga4ghGenomicVariantRequest request) {
    this.request = request;
    return this;
  }

  /**
   * Get request
   * @return request
   **/
  @JsonProperty("request")
  @ApiModelProperty(required = true, value = "")
  @NotNull @Valid 
  public Ga4ghGenomicVariantRequest getRequest() {
    return request;
  }

  public void setRequest(Ga4ghGenomicVariantRequest request) {
    this.request = request;
  }

  public Ga4ghGenomicVariantResponseValue results(List<Ga4ghVariantsFoundResponse> results) {
    this.results = results;
    return this;
  }

  public Ga4ghGenomicVariantResponseValue addResultsItem(Ga4ghVariantsFoundResponse resultsItem) {
    this.results.add(resultsItem);
    return this;
  }

  /**
   * Get results
   * @return results
   **/
  @JsonProperty("results")
  @ApiModelProperty(required = true, value = "")
  @NotNull @Valid 
  public List<Ga4ghVariantsFoundResponse> getResults() {
    return results;
  }

  public void setResults(List<Ga4ghVariantsFoundResponse> results) {
    this.results = results;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Ga4ghGenomicVariantResponseValue genomicVariantResponseValue = (Ga4ghGenomicVariantResponseValue) o;
    return Objects.equals(this.beaconId, genomicVariantResponseValue.beaconId) &&
        Objects.equals(this.apiVersion, genomicVariantResponseValue.apiVersion) &&
        Objects.equals(this.error, genomicVariantResponseValue.error) &&
        Objects.equals(this.request, genomicVariantResponseValue.request) &&
        Objects.equals(this.results, genomicVariantResponseValue.results);
  }

  @Override
  public int hashCode() {
    return Objects.hash(beaconId, apiVersion, error, request, results);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Ga4ghGenomicVariantResponseValue {\n");

    sb.append("    beaconId: ").append(toIndentedString(beaconId)).append("\n");
    sb.append("    apiVersion: ").append(toIndentedString(apiVersion)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    request: ").append(toIndentedString(request)).append("\n");
    sb.append("    results: ").append(toIndentedString(results)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

