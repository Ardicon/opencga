/*
 * GA4GH Beacon API Specification
 * A Beacon is a web service for genetic data sharing that can be queried for  information about variants, individuals or samples.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: beacon@ga4gh.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.opencb.opencga.server.rest.ga4gh.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import javax.validation.Valid;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Default schema for variant annotation 
 */
@ApiModel(description = "Default schema for variant annotation ")
@JsonPropertyOrder({
  Ga4ghVariantAnnotation.JSON_PROPERTY_DEFAULT,
  Ga4ghVariantAnnotation.JSON_PROPERTY_ALTERNATIVE_SCHEMAS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2020-03-24T15:12:46.170Z[Europe/London]")
public class Ga4ghVariantAnnotation   {
  public static final String JSON_PROPERTY_DEFAULT = "default";
  @JsonProperty(JSON_PROPERTY_DEFAULT)
  private Ga4ghVariantAnnotationDefault _default;

  public static final String JSON_PROPERTY_ALTERNATIVE_SCHEMAS = "alternativeSchemas";
  @JsonProperty(JSON_PROPERTY_ALTERNATIVE_SCHEMAS)
  private List<Ga4ghResponseBasicStructure> alternativeSchemas = null;

  public Ga4ghVariantAnnotation _default(Ga4ghVariantAnnotationDefault _default) {
    this._default = _default;
    return this;
  }

  /**
   * Get _default
   * @return _default
   **/
  @JsonProperty("default")
  @ApiModelProperty(value = "")
  @Valid 
  public Ga4ghVariantAnnotationDefault getDefault() {
    return _default;
  }

  public void setDefault(Ga4ghVariantAnnotationDefault _default) {
    this._default = _default;
  }

  public Ga4ghVariantAnnotation alternativeSchemas(List<Ga4ghResponseBasicStructure> alternativeSchemas) {
    this.alternativeSchemas = alternativeSchemas;
    return this;
  }

  public Ga4ghVariantAnnotation addAlternativeSchemasItem(Ga4ghResponseBasicStructure alternativeSchemasItem) {
    if (this.alternativeSchemas == null) {
      this.alternativeSchemas = new ArrayList<Ga4ghResponseBasicStructure>();
    }
    this.alternativeSchemas.add(alternativeSchemasItem);
    return this;
  }

  /**
   * Get alternativeSchemas
   * @return alternativeSchemas
   **/
  @JsonProperty("alternativeSchemas")
  @ApiModelProperty(value = "")
  @Valid 
  public List<Ga4ghResponseBasicStructure> getAlternativeSchemas() {
    return alternativeSchemas;
  }

  public void setAlternativeSchemas(List<Ga4ghResponseBasicStructure> alternativeSchemas) {
    this.alternativeSchemas = alternativeSchemas;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Ga4ghVariantAnnotation variantAnnotation = (Ga4ghVariantAnnotation) o;
    return Objects.equals(this._default, variantAnnotation._default) &&
        Objects.equals(this.alternativeSchemas, variantAnnotation.alternativeSchemas);
  }

  @Override
  public int hashCode() {
    return Objects.hash(_default, alternativeSchemas);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Ga4ghVariantAnnotation {\n");

    sb.append("    _default: ").append(toIndentedString(_default)).append("\n");
    sb.append("    alternativeSchemas: ").append(toIndentedString(alternativeSchemas)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

