/*
 * GA4GH Beacon API Specification
 * A Beacon is a web service for genetic data sharing that can be queried for  information about variants, individuals or samples.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: beacon@ga4gh.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.opencb.opencga.server.rest.ga4gh.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import javax.validation.Valid;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Metadata describing a beacon instance. 
 */
@ApiModel(description = "Metadata describing a beacon instance. ")
@JsonPropertyOrder({
  Ga4ghBeacon.JSON_PROPERTY_ID,
  Ga4ghBeacon.JSON_PROPERTY_NAME,
  Ga4ghBeacon.JSON_PROPERTY_API_VERSION,
  Ga4ghBeacon.JSON_PROPERTY_ORGANIZATION,
  Ga4ghBeacon.JSON_PROPERTY_DESCRIPTION,
  Ga4ghBeacon.JSON_PROPERTY_VERSION,
  Ga4ghBeacon.JSON_PROPERTY_WELCOME_URL,
  Ga4ghBeacon.JSON_PROPERTY_ALTERNATIVE_URL,
  Ga4ghBeacon.JSON_PROPERTY_CREATE_DATE_TIME,
  Ga4ghBeacon.JSON_PROPERTY_UPDATE_DATE_TIME,
  Ga4ghBeacon.JSON_PROPERTY_DATASETS,
  Ga4ghBeacon.JSON_PROPERTY_SAMPLE_ALLELE_REQUESTS,
  Ga4ghBeacon.JSON_PROPERTY_INFO
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2020-03-24T15:12:46.170Z[Europe/London]")
public class Ga4ghBeacon   {
  public static final String JSON_PROPERTY_ID = "id";
  @JsonProperty(JSON_PROPERTY_ID)
  private String id;

  public static final String JSON_PROPERTY_NAME = "name";
  @JsonProperty(JSON_PROPERTY_NAME)
  private String name;

  public static final String JSON_PROPERTY_API_VERSION = "apiVersion";
  @JsonProperty(JSON_PROPERTY_API_VERSION)
  private String apiVersion;

  public static final String JSON_PROPERTY_ORGANIZATION = "organization";
  @JsonProperty(JSON_PROPERTY_ORGANIZATION)
  private Ga4ghBeaconOrganization organization;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  private String description;

  public static final String JSON_PROPERTY_VERSION = "version";
  @JsonProperty(JSON_PROPERTY_VERSION)
  private String version;

  public static final String JSON_PROPERTY_WELCOME_URL = "welcomeUrl";
  @JsonProperty(JSON_PROPERTY_WELCOME_URL)
  private String welcomeUrl;

  public static final String JSON_PROPERTY_ALTERNATIVE_URL = "alternativeUrl";
  @JsonProperty(JSON_PROPERTY_ALTERNATIVE_URL)
  private String alternativeUrl;

  public static final String JSON_PROPERTY_CREATE_DATE_TIME = "createDateTime";
  @JsonProperty(JSON_PROPERTY_CREATE_DATE_TIME)
  private String createDateTime;

  public static final String JSON_PROPERTY_UPDATE_DATE_TIME = "updateDateTime";
  @JsonProperty(JSON_PROPERTY_UPDATE_DATE_TIME)
  private String updateDateTime;

  public static final String JSON_PROPERTY_DATASETS = "datasets";
  @JsonProperty(JSON_PROPERTY_DATASETS)
  private List<Ga4ghBeaconDataset> datasets = new ArrayList<Ga4ghBeaconDataset>();

  public static final String JSON_PROPERTY_SAMPLE_ALLELE_REQUESTS = "sampleAlleleRequests";
  @JsonProperty(JSON_PROPERTY_SAMPLE_ALLELE_REQUESTS)
  private List<Ga4ghBeaconAlleleRequest> sampleAlleleRequests = null;

  public static final String JSON_PROPERTY_INFO = "info";
  @JsonProperty(JSON_PROPERTY_INFO)
  private Object info;

  public Ga4ghBeacon id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Unique identifier of the beacon. Use reverse domain name notation. 
   * @return id
   **/
  @JsonProperty("id")
  @ApiModelProperty(example = "org.ga4gh.beacon", required = true, value = "Unique identifier of the beacon. Use reverse domain name notation. ")
  @NotNull 
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Ga4ghBeacon name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Name of the beacon. 
   * @return name
   **/
  @JsonProperty("name")
  @ApiModelProperty(required = true, value = "Name of the beacon. ")
  @NotNull 
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Ga4ghBeacon apiVersion(String apiVersion) {
    this.apiVersion = apiVersion;
    return this;
  }

  /**
   * Version of the API provided by the beacon.
   * @return apiVersion
   **/
  @JsonProperty("apiVersion")
  @ApiModelProperty(example = "v0.3", required = true, value = "Version of the API provided by the beacon.")
  @NotNull 
  public String getApiVersion() {
    return apiVersion;
  }

  public void setApiVersion(String apiVersion) {
    this.apiVersion = apiVersion;
  }

  public Ga4ghBeacon organization(Ga4ghBeaconOrganization organization) {
    this.organization = organization;
    return this;
  }

  /**
   * Get organization
   * @return organization
   **/
  @JsonProperty("organization")
  @ApiModelProperty(required = true, value = "")
  @NotNull @Valid 
  public Ga4ghBeaconOrganization getOrganization() {
    return organization;
  }

  public void setOrganization(Ga4ghBeaconOrganization organization) {
    this.organization = organization;
  }

  public Ga4ghBeacon description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Description of the beacon. 
   * @return description
   **/
  @JsonProperty("description")
  @ApiModelProperty(value = "Description of the beacon. ")
  
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Ga4ghBeacon version(String version) {
    this.version = version;
    return this;
  }

  /**
   * Version of the beacon. 
   * @return version
   **/
  @JsonProperty("version")
  @ApiModelProperty(example = "v0.1", value = "Version of the beacon. ")
  
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public Ga4ghBeacon welcomeUrl(String welcomeUrl) {
    this.welcomeUrl = welcomeUrl;
    return this;
  }

  /**
   * URL to the welcome page for this beacon (RFC 3986 format). 
   * @return welcomeUrl
   **/
  @JsonProperty("welcomeUrl")
  @ApiModelProperty(example = "http://example.org/wiki/Main_Page", value = "URL to the welcome page for this beacon (RFC 3986 format). ")
  
  public String getWelcomeUrl() {
    return welcomeUrl;
  }

  public void setWelcomeUrl(String welcomeUrl) {
    this.welcomeUrl = welcomeUrl;
  }

  public Ga4ghBeacon alternativeUrl(String alternativeUrl) {
    this.alternativeUrl = alternativeUrl;
    return this;
  }

  /**
   * Alternative URL to the API, e.g. a restricted version of this beacon (RFC 3986 format).
   * @return alternativeUrl
   **/
  @JsonProperty("alternativeUrl")
  @ApiModelProperty(example = "http://example.org/wiki/Main_Page", value = "Alternative URL to the API, e.g. a restricted version of this beacon (RFC 3986 format).")
  
  public String getAlternativeUrl() {
    return alternativeUrl;
  }

  public void setAlternativeUrl(String alternativeUrl) {
    this.alternativeUrl = alternativeUrl;
  }

  public Ga4ghBeacon createDateTime(String createDateTime) {
    this.createDateTime = createDateTime;
    return this;
  }

  /**
   * The time the beacon was created (ISO 8601 format). 
   * @return createDateTime
   **/
  @JsonProperty("createDateTime")
  @ApiModelProperty(example = "2012-07-19 or 2017-01-17T20:33:40Z", value = "The time the beacon was created (ISO 8601 format). ")
  
  public String getCreateDateTime() {
    return createDateTime;
  }

  public void setCreateDateTime(String createDateTime) {
    this.createDateTime = createDateTime;
  }

  public Ga4ghBeacon updateDateTime(String updateDateTime) {
    this.updateDateTime = updateDateTime;
    return this;
  }

  /**
   * The time the beacon was updated in (ISO 8601 format). 
   * @return updateDateTime
   **/
  @JsonProperty("updateDateTime")
  @ApiModelProperty(example = "2012-07-19 or 2017-01-17T20:33:40Z", value = "The time the beacon was updated in (ISO 8601 format). ")
  
  public String getUpdateDateTime() {
    return updateDateTime;
  }

  public void setUpdateDateTime(String updateDateTime) {
    this.updateDateTime = updateDateTime;
  }

  public Ga4ghBeacon datasets(List<Ga4ghBeaconDataset> datasets) {
    this.datasets = datasets;
    return this;
  }

  public Ga4ghBeacon addDatasetsItem(Ga4ghBeaconDataset datasetsItem) {
    this.datasets.add(datasetsItem);
    return this;
  }

  /**
   * Dataset(s) served by the beacon.
   * @return datasets
   **/
  @JsonProperty("datasets")
  @ApiModelProperty(required = true, value = "Dataset(s) served by the beacon.")
  @NotNull @Valid  @Size(min=1)
  public List<Ga4ghBeaconDataset> getDatasets() {
    return datasets;
  }

  public void setDatasets(List<Ga4ghBeaconDataset> datasets) {
    this.datasets = datasets;
  }

  public Ga4ghBeacon sampleAlleleRequests(List<Ga4ghBeaconAlleleRequest> sampleAlleleRequests) {
    this.sampleAlleleRequests = sampleAlleleRequests;
    return this;
  }

  public Ga4ghBeacon addSampleAlleleRequestsItem(Ga4ghBeaconAlleleRequest sampleAlleleRequestsItem) {
    if (this.sampleAlleleRequests == null) {
      this.sampleAlleleRequests = new ArrayList<Ga4ghBeaconAlleleRequest>();
    }
    this.sampleAlleleRequests.add(sampleAlleleRequestsItem);
    return this;
  }

  /**
   * Examples of interesting queries, e.g. a few queries demonstrating different responses.
   * @return sampleAlleleRequests
   **/
  @JsonProperty("sampleAlleleRequests")
  @ApiModelProperty(value = "Examples of interesting queries, e.g. a few queries demonstrating different responses.")
  @Valid 
  public List<Ga4ghBeaconAlleleRequest> getSampleAlleleRequests() {
    return sampleAlleleRequests;
  }

  public void setSampleAlleleRequests(List<Ga4ghBeaconAlleleRequest> sampleAlleleRequests) {
    this.sampleAlleleRequests = sampleAlleleRequests;
  }

  public Ga4ghBeacon info(Object info) {
    this.info = info;
    return this;
  }

  /**
   * Additional unspecified metadata about the Beacon service. 
   * @return info
   **/
  @JsonProperty("info")
  @ApiModelProperty(example = "{\"additionalInfoKey1\":\"additionalInfoValue1\",\"additionalInfoKey2\":[\"additionalInfoValue2\",\"additionalInfoValue3\"]}", value = "Additional unspecified metadata about the Beacon service. ")
  @Valid 
  public Object getInfo() {
    return info;
  }

  public void setInfo(Object info) {
    this.info = info;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Ga4ghBeacon beacon = (Ga4ghBeacon) o;
    return Objects.equals(this.id, beacon.id) &&
        Objects.equals(this.name, beacon.name) &&
        Objects.equals(this.apiVersion, beacon.apiVersion) &&
        Objects.equals(this.organization, beacon.organization) &&
        Objects.equals(this.description, beacon.description) &&
        Objects.equals(this.version, beacon.version) &&
        Objects.equals(this.welcomeUrl, beacon.welcomeUrl) &&
        Objects.equals(this.alternativeUrl, beacon.alternativeUrl) &&
        Objects.equals(this.createDateTime, beacon.createDateTime) &&
        Objects.equals(this.updateDateTime, beacon.updateDateTime) &&
        Objects.equals(this.datasets, beacon.datasets) &&
        Objects.equals(this.sampleAlleleRequests, beacon.sampleAlleleRequests) &&
        Objects.equals(this.info, beacon.info);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, apiVersion, organization, description, version, welcomeUrl, alternativeUrl, createDateTime, updateDateTime, datasets, sampleAlleleRequests, info);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Ga4ghBeacon {\n");

    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    apiVersion: ").append(toIndentedString(apiVersion)).append("\n");
    sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    welcomeUrl: ").append(toIndentedString(welcomeUrl)).append("\n");
    sb.append("    alternativeUrl: ").append(toIndentedString(alternativeUrl)).append("\n");
    sb.append("    createDateTime: ").append(toIndentedString(createDateTime)).append("\n");
    sb.append("    updateDateTime: ").append(toIndentedString(updateDateTime)).append("\n");
    sb.append("    datasets: ").append(toIndentedString(datasets)).append("\n");
    sb.append("    sampleAlleleRequests: ").append(toIndentedString(sampleAlleleRequests)).append("\n");
    sb.append("    info: ").append(toIndentedString(info)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

