/*
 * GA4GH Beacon API Specification
 * A Beacon is a web service for genetic data sharing that can be queried for  information about variants, individuals or samples.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: beacon@ga4gh.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.opencb.opencga.server.rest.ga4gh.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.swagger.annotations.ApiModelProperty;

import javax.validation.Valid;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Ga4ghMetaConditions
 */
@JsonPropertyOrder({
  Ga4ghMetaConditions.JSON_PROPERTY_SHARING_MODE,
  Ga4ghMetaConditions.JSON_PROPERTY_MULTIPLE_OBLIGATIONS_RULE,
  Ga4ghMetaConditions.JSON_PROPERTY_NO_OTHER_CONDITIONS,
  Ga4ghMetaConditions.JSON_PROPERTY_WHICH_OTHER_CONDITIONS,
  Ga4ghMetaConditions.JSON_PROPERTY_SENSITIVE_POPULATIONS,
  Ga4ghMetaConditions.JSON_PROPERTY_UNIFORM_CONSENT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2020-03-24T15:12:46.170Z[Europe/London]")
public class Ga4ghMetaConditions   {
  public static final String JSON_PROPERTY_SHARING_MODE = "sharingMode";
  @JsonProperty(JSON_PROPERTY_SHARING_MODE)
  private Ga4ghSharingMode sharingMode;

  public static final String JSON_PROPERTY_MULTIPLE_OBLIGATIONS_RULE = "multipleObligationsRule";
  @JsonProperty(JSON_PROPERTY_MULTIPLE_OBLIGATIONS_RULE)
  private Ga4ghMultipleObligationsRule multipleObligationsRule;

  public static final String JSON_PROPERTY_NO_OTHER_CONDITIONS = "noOtherConditions";
  @JsonProperty(JSON_PROPERTY_NO_OTHER_CONDITIONS)
  private Boolean noOtherConditions;

  public static final String JSON_PROPERTY_WHICH_OTHER_CONDITIONS = "whichOtherConditions";
  @JsonProperty(JSON_PROPERTY_WHICH_OTHER_CONDITIONS)
  private List<String> whichOtherConditions = null;

  public static final String JSON_PROPERTY_SENSITIVE_POPULATIONS = "sensitivePopulations";
  @JsonProperty(JSON_PROPERTY_SENSITIVE_POPULATIONS)
  private Boolean sensitivePopulations;

  public static final String JSON_PROPERTY_UNIFORM_CONSENT = "uniformConsent";
  @JsonProperty(JSON_PROPERTY_UNIFORM_CONSENT)
  private Boolean uniformConsent;

  public Ga4ghMetaConditions sharingMode(Ga4ghSharingMode sharingMode) {
    this.sharingMode = sharingMode;
    return this;
  }

  /**
   * Get sharingMode
   * @return sharingMode
   **/
  @JsonProperty("sharingMode")
  @ApiModelProperty(value = "")
  @Valid 
  public Ga4ghSharingMode getSharingMode() {
    return sharingMode;
  }

  public void setSharingMode(Ga4ghSharingMode sharingMode) {
    this.sharingMode = sharingMode;
  }

  public Ga4ghMetaConditions multipleObligationsRule(Ga4ghMultipleObligationsRule multipleObligationsRule) {
    this.multipleObligationsRule = multipleObligationsRule;
    return this;
  }

  /**
   * Get multipleObligationsRule
   * @return multipleObligationsRule
   **/
  @JsonProperty("multipleObligationsRule")
  @ApiModelProperty(value = "")
  @Valid 
  public Ga4ghMultipleObligationsRule getMultipleObligationsRule() {
    return multipleObligationsRule;
  }

  public void setMultipleObligationsRule(Ga4ghMultipleObligationsRule multipleObligationsRule) {
    this.multipleObligationsRule = multipleObligationsRule;
  }

  public Ga4ghMetaConditions noOtherConditions(Boolean noOtherConditions) {
    this.noOtherConditions = noOtherConditions;
    return this;
  }

  /**
   * There are no other use restrictions/limitations in force which are not herein specified.
   * @return noOtherConditions
   **/
  @JsonProperty("noOtherConditions")
  @ApiModelProperty(value = "There are no other use restrictions/limitations in force which are not herein specified.")
  
  public Boolean getNoOtherConditions() {
    return noOtherConditions;
  }

  public void setNoOtherConditions(Boolean noOtherConditions) {
    this.noOtherConditions = noOtherConditions;
  }

  public Ga4ghMetaConditions whichOtherConditions(List<String> whichOtherConditions) {
    this.whichOtherConditions = whichOtherConditions;
    return this;
  }

  public Ga4ghMetaConditions addWhichOtherConditionsItem(String whichOtherConditionsItem) {
    if (this.whichOtherConditions == null) {
      this.whichOtherConditions = new ArrayList<String>();
    }
    this.whichOtherConditions.add(whichOtherConditionsItem);
    return this;
  }

  /**
   * Other permissions/limitations may apply as specified.
   * @return whichOtherConditions
   **/
  @JsonProperty("whichOtherConditions")
  @ApiModelProperty(value = "Other permissions/limitations may apply as specified.")
  
  public List<String> getWhichOtherConditions() {
    return whichOtherConditions;
  }

  public void setWhichOtherConditions(List<String> whichOtherConditions) {
    this.whichOtherConditions = whichOtherConditions;
  }

  public Ga4ghMetaConditions sensitivePopulations(Boolean sensitivePopulations) {
    this.sensitivePopulations = sensitivePopulations;
    return this;
  }

  /**
   * No special evaluation required for access requests involving sensitive/restricted populations.
   * @return sensitivePopulations
   **/
  @JsonProperty("sensitivePopulations")
  @ApiModelProperty(value = "No special evaluation required for access requests involving sensitive/restricted populations.")
  
  public Boolean getSensitivePopulations() {
    return sensitivePopulations;
  }

  public void setSensitivePopulations(Boolean sensitivePopulations) {
    this.sensitivePopulations = sensitivePopulations;
  }

  public Ga4ghMetaConditions uniformConsent(Boolean uniformConsent) {
    this.uniformConsent = uniformConsent;
    return this;
  }

  /**
   * Identical consent permissions have been provided by all subjects.
   * @return uniformConsent
   **/
  @JsonProperty("uniformConsent")
  @ApiModelProperty(value = "Identical consent permissions have been provided by all subjects.")
  
  public Boolean getUniformConsent() {
    return uniformConsent;
  }

  public void setUniformConsent(Boolean uniformConsent) {
    this.uniformConsent = uniformConsent;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Ga4ghMetaConditions metaConditions = (Ga4ghMetaConditions) o;
    return Objects.equals(this.sharingMode, metaConditions.sharingMode) &&
        Objects.equals(this.multipleObligationsRule, metaConditions.multipleObligationsRule) &&
        Objects.equals(this.noOtherConditions, metaConditions.noOtherConditions) &&
        Objects.equals(this.whichOtherConditions, metaConditions.whichOtherConditions) &&
        Objects.equals(this.sensitivePopulations, metaConditions.sensitivePopulations) &&
        Objects.equals(this.uniformConsent, metaConditions.uniformConsent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sharingMode, multipleObligationsRule, noOtherConditions, whichOtherConditions, sensitivePopulations, uniformConsent);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Ga4ghMetaConditions {\n");

    sb.append("    sharingMode: ").append(toIndentedString(sharingMode)).append("\n");
    sb.append("    multipleObligationsRule: ").append(toIndentedString(multipleObligationsRule)).append("\n");
    sb.append("    noOtherConditions: ").append(toIndentedString(noOtherConditions)).append("\n");
    sb.append("    whichOtherConditions: ").append(toIndentedString(whichOtherConditions)).append("\n");
    sb.append("    sensitivePopulations: ").append(toIndentedString(sensitivePopulations)).append("\n");
    sb.append("    uniformConsent: ").append(toIndentedString(uniformConsent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

