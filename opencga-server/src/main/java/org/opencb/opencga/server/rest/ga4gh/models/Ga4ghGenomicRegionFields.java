/*
 * GA4GH Beacon API Specification
 * A Beacon is a web service for genetic data sharing that can be queried for  information about variants, individuals or samples.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: beacon@ga4gh.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.opencb.opencga.server.rest.ga4gh.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import javax.validation.Valid;
import javax.validation.constraints.Min;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Pattern;
import java.util.Objects;

/**
 * Region request made against the Beacon.  
 */
@ApiModel(description = "Region request made against the Beacon.  ")
@JsonPropertyOrder({
  Ga4ghGenomicRegionFields.JSON_PROPERTY_ASSEMBLY_ID,
  Ga4ghGenomicRegionFields.JSON_PROPERTY_REFERENCE_NAME,
  Ga4ghGenomicRegionFields.JSON_PROPERTY_REFERENCE_BASES,
  Ga4ghGenomicRegionFields.JSON_PROPERTY_START,
  Ga4ghGenomicRegionFields.JSON_PROPERTY_END
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2020-03-24T15:12:46.170Z[Europe/London]")
public class Ga4ghGenomicRegionFields   {
  public static final String JSON_PROPERTY_ASSEMBLY_ID = "assemblyId";
  @JsonProperty(JSON_PROPERTY_ASSEMBLY_ID)
  private String assemblyId;

  public static final String JSON_PROPERTY_REFERENCE_NAME = "referenceName";
  @JsonProperty(JSON_PROPERTY_REFERENCE_NAME)
  private Ga4ghChromosome referenceName;

  public static final String JSON_PROPERTY_REFERENCE_BASES = "referenceBases";
  @JsonProperty(JSON_PROPERTY_REFERENCE_BASES)
  private String referenceBases;

  public static final String JSON_PROPERTY_START = "start";
  @JsonProperty(JSON_PROPERTY_START)
  private Long start;

  public static final String JSON_PROPERTY_END = "end";
  @JsonProperty(JSON_PROPERTY_END)
  private Integer end;

  public Ga4ghGenomicRegionFields assemblyId(String assemblyId) {
    this.assemblyId = assemblyId;
    return this;
  }

  /**
   * Assembly identifier (GRC notation, e.g. GRCh37). 
   * @return assemblyId
   **/
  @JsonProperty("assemblyId")
  @ApiModelProperty(example = "GRCh38", required = true, value = "Assembly identifier (GRC notation, e.g. GRCh37). ")
  @NotNull 
  public String getAssemblyId() {
    return assemblyId;
  }

  public void setAssemblyId(String assemblyId) {
    this.assemblyId = assemblyId;
  }

  public Ga4ghGenomicRegionFields referenceName(Ga4ghChromosome referenceName) {
    this.referenceName = referenceName;
    return this;
  }

  /**
   * Get referenceName
   * @return referenceName
   **/
  @JsonProperty("referenceName")
  @ApiModelProperty(required = true, value = "")
  @NotNull @Valid 
  public Ga4ghChromosome getReferenceName() {
    return referenceName;
  }

  public void setReferenceName(Ga4ghChromosome referenceName) {
    this.referenceName = referenceName;
  }

  public Ga4ghGenomicRegionFields referenceBases(String referenceBases) {
    this.referenceBases = referenceBases;
    return this;
  }

  /**
   * Reference bases for this variant (starting from &#x60;start&#x60;). Accepted  values: [ACGT]*. 
   * @return referenceBases
   **/
  @JsonProperty("referenceBases")
  @ApiModelProperty(value = "Reference bases for this variant (starting from `start`). Accepted  values: [ACGT]*. ")
   @Pattern(regexp="^([ACGT]+)$")
  public String getReferenceBases() {
    return referenceBases;
  }

  public void setReferenceBases(String referenceBases) {
    this.referenceBases = referenceBases;
  }

  public Ga4ghGenomicRegionFields start(Long start) {
    this.start = start;
    return this;
  }

  /**
   * Precise &#x60;start&#x60; coordinate position, allele locus (0-based,  inclusive). 
   * minimum: 0
   * @return start
   **/
  @JsonProperty("start")
  @ApiModelProperty(required = true, value = "Precise `start` coordinate position, allele locus (0-based,  inclusive). ")
  @NotNull  @Min(0L)
  public Long getStart() {
    return start;
  }

  public void setStart(Long start) {
    this.start = start;
  }

  public Ga4ghGenomicRegionFields end(Integer end) {
    this.end = end;
    return this;
  }

  /**
   * Precise &#x60;end&#x60; coordinate (0-based, exclusive). See &#x60;start&#x60;. 
   * @return end
   **/
  @JsonProperty("end")
  @ApiModelProperty(required = true, value = "Precise `end` coordinate (0-based, exclusive). See `start`. ")
  @NotNull 
  public Integer getEnd() {
    return end;
  }

  public void setEnd(Integer end) {
    this.end = end;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Ga4ghGenomicRegionFields genomicRegionFields = (Ga4ghGenomicRegionFields) o;
    return Objects.equals(this.assemblyId, genomicRegionFields.assemblyId) &&
        Objects.equals(this.referenceName, genomicRegionFields.referenceName) &&
        Objects.equals(this.referenceBases, genomicRegionFields.referenceBases) &&
        Objects.equals(this.start, genomicRegionFields.start) &&
        Objects.equals(this.end, genomicRegionFields.end);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assemblyId, referenceName, referenceBases, start, end);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Ga4ghGenomicRegionFields {\n");

    sb.append("    assemblyId: ").append(toIndentedString(assemblyId)).append("\n");
    sb.append("    referenceName: ").append(toIndentedString(referenceName)).append("\n");
    sb.append("    referenceBases: ").append(toIndentedString(referenceBases)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    end: ").append(toIndentedString(end)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

