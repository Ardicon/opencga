/*
 * GA4GH Beacon API Specification
 * Schemas to be used as default by the Beacon.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: beacon@ga4gh.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.opencb.opencga.server.rest.ga4gh.models.schemas;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.opencb.opencga.server.rest.ga4gh.models.Ga4ghPedigree;

import java.util.ArrayList;
import java.util.List;

/**
 * The Individual schema is part of a Data Beacon 2.0 schema, i.e, it applies to variants whose source is an Individual, as opposed to those variants in Evidence Beacon 2.0 schema where the variant source is a Knowledge Base 
 */
@ApiModel(description = "The Individual schema is part of a Data Beacon 2.0 schema, i.e, it applies to variants whose source is an Individual, as opposed to those variants in Evidence Beacon 2.0 schema where the variant source is a Knowledge Base ")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-03-24T09:26:11.315Z[Europe/London]")
public class Ga4ghIndividual {
  public static final String SERIALIZED_NAME_INDIVIDUAL_ID = "individualId";
  @SerializedName(SERIALIZED_NAME_INDIVIDUAL_ID)
  private String individualId;

  public static final String SERIALIZED_NAME_SEX = "sex";
  @SerializedName(SERIALIZED_NAME_SEX)
  private String sex;

  public static final String SERIALIZED_NAME_ETHNICITY = "ethnicity";
  @SerializedName(SERIALIZED_NAME_ETHNICITY)
  private String ethnicity;

  public static final String SERIALIZED_NAME_GEOGRAPHIC_ORIGIN = "geographicOrigin";
  @SerializedName(SERIALIZED_NAME_GEOGRAPHIC_ORIGIN)
  private String geographicOrigin;

  public static final String SERIALIZED_NAME_DISEASES = "diseases";
  @SerializedName(SERIALIZED_NAME_DISEASES)
  private List<Ga4ghDisease> diseases = null;

  public static final String SERIALIZED_NAME_PEDIGREES = "pedigrees";
  @SerializedName(SERIALIZED_NAME_PEDIGREES)
  private List<Ga4ghPedigree> pedigrees = null;

  public static final String SERIALIZED_NAME_INFO = "info";
  @SerializedName(SERIALIZED_NAME_INFO)
  private Object info;


  public Ga4ghIndividual individualId(String individualId) {
    
    this.individualId = individualId;
    return this;
  }

   /**
   * ID referencing the individual in the database. 
   * @return individualId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "P0001", value = "ID referencing the individual in the database. ")

  public String getIndividualId() {
    return individualId;
  }


  public void setIndividualId(String individualId) {
    this.individualId = individualId;
  }


  public Ga4ghIndividual sex(String sex) {
    
    this.sex = sex;
    return this;
  }

   /**
   * Categorical value from NCIT General Qualifier ontology (NCIT:C27993): UNKNOWN (not assessed or not available) (NCIT:C17998), FEMALE (NCIT:C46113), MALE, (NCIT:C46112) or OTHER SEX (NCIT:C45908) 
   * @return sex
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "NCIT:C17998", value = "Categorical value from NCIT General Qualifier ontology (NCIT:C27993): UNKNOWN (not assessed or not available) (NCIT:C17998), FEMALE (NCIT:C46113), MALE, (NCIT:C46112) or OTHER SEX (NCIT:C45908) ")

  public String getSex() {
    return sex;
  }


  public void setSex(String sex) {
    this.sex = sex;
  }


  public Ga4ghIndividual ethnicity(String ethnicity) {
    
    this.ethnicity = ethnicity;
    return this;
  }

   /**
   * Categorical value from NCIT Race ontology (NCIT:C17049) 
   * @return ethnicity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "NCIT:C126531", value = "Categorical value from NCIT Race ontology (NCIT:C17049) ")

  public String getEthnicity() {
    return ethnicity;
  }


  public void setEthnicity(String ethnicity) {
    this.ethnicity = ethnicity;
  }


  public Ga4ghIndividual geographicOrigin(String geographicOrigin) {
    
    this.geographicOrigin = geographicOrigin;
    return this;
  }

   /**
   * Categorical value from GAZ Geographic Location ontology (GAZ:00000448) describing the individual�s country or region of origin (birthplace or residence place regardless of ethnic origin). 
   * @return geographicOrigin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "GAZ:00002459", value = "Categorical value from GAZ Geographic Location ontology (GAZ:00000448) describing the individual�s country or region of origin (birthplace or residence place regardless of ethnic origin). ")

  public String getGeographicOrigin() {
    return geographicOrigin;
  }


  public void setGeographicOrigin(String geographicOrigin) {
    this.geographicOrigin = geographicOrigin;
  }


  public Ga4ghIndividual diseases(List<Ga4ghDisease> diseases) {
    
    this.diseases = diseases;
    return this;
  }

  public Ga4ghIndividual addDiseasesItem(Ga4ghDisease diseasesItem) {
    if (this.diseases == null) {
      this.diseases = new ArrayList<Ga4ghDisease>();
    }
    this.diseases.add(diseasesItem);
    return this;
  }

   /**
   * List of disease(s) been diagnosed to the individual, defined by disease ICD10 code, optionally other disease ontology ID(s), age of onset, stage and the presence of family history. 
   * @return diseases
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of disease(s) been diagnosed to the individual, defined by disease ICD10 code, optionally other disease ontology ID(s), age of onset, stage and the presence of family history. ")

  public List<Ga4ghDisease> getDiseases() {
    return diseases;
  }


  public void setDiseases(List<Ga4ghDisease> diseases) {
    this.diseases = diseases;
  }


  public Ga4ghIndividual pedigrees(List<Ga4ghPedigree> pedigrees) {
    
    this.pedigrees = pedigrees;
    return this;
  }

  public Ga4ghIndividual addPedigreesItem(Ga4ghPedigree pedigreesItem) {
    if (this.pedigrees == null) {
      this.pedigrees = new ArrayList<Ga4ghPedigree>();
    }
    this.pedigrees.add(pedigreesItem);
    return this;
  }

   /**
   * Get pedigrees
   * @return pedigrees
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Ga4ghPedigree> getPedigrees() {
    return pedigrees;
  }


  public void setPedigrees(List<Ga4ghPedigree> pedigrees) {
    this.pedigrees = pedigrees;
  }


  public Ga4ghIndividual info(Object info) {
    
    this.info = info;
    return this;
  }

   /**
   * Additional unspecified metadata about the dataset response or its  content. 
   * @return info
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"additionalInfoKey1\":[\"additionalInfoValue1\",\"additionalInfoValue2\"],\"additionalInfoKey2\":\"additionalInfoValue3\"}", value = "Additional unspecified metadata about the dataset response or its  content. ")

  public Object getInfo() {
    return info;
  }


  public void setInfo(Object info) {
    this.info = info;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Ga4ghIndividual individual = (Ga4ghIndividual) o;
    return Objects.equals(this.individualId, individual.individualId) &&
        Objects.equals(this.sex, individual.sex) &&
        Objects.equals(this.ethnicity, individual.ethnicity) &&
        Objects.equals(this.geographicOrigin, individual.geographicOrigin) &&
        Objects.equals(this.diseases, individual.diseases) &&
        Objects.equals(this.pedigrees, individual.pedigrees) &&
        Objects.equals(this.info, individual.info);
  }

  @Override
  public int hashCode() {
    return Objects.hash(individualId, sex, ethnicity, geographicOrigin, diseases, pedigrees, info);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Ga4ghIndividual {\n");
    sb.append("    individualId: ").append(toIndentedString(individualId)).append("\n");
    sb.append("    sex: ").append(toIndentedString(sex)).append("\n");
    sb.append("    ethnicity: ").append(toIndentedString(ethnicity)).append("\n");
    sb.append("    geographicOrigin: ").append(toIndentedString(geographicOrigin)).append("\n");
    sb.append("    diseases: ").append(toIndentedString(diseases)).append("\n");
    sb.append("    pedigrees: ").append(toIndentedString(pedigrees)).append("\n");
    sb.append("    info: ").append(toIndentedString(info)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

