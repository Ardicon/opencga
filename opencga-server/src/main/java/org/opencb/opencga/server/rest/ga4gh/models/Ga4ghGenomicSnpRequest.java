/*
 * GA4GH Beacon API Specification
 * A Beacon is a web service for genetic data sharing that can be queried for  information about variants, individuals or samples.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: beacon@ga4gh.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.opencb.opencga.server.rest.ga4gh.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import javax.validation.Valid;
import javax.validation.constraints.NotNull;
import java.util.Objects;

/**
 * Search for a genomic SNP 
 */
@ApiModel(description = "Search for a genomic SNP ")
@JsonPropertyOrder({
  Ga4ghGenomicSnpRequest.JSON_PROPERTY_META,
  Ga4ghGenomicSnpRequest.JSON_PROPERTY_QUERY
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2020-03-24T15:12:46.170Z[Europe/London]")
public class Ga4ghGenomicSnpRequest   {
  public static final String JSON_PROPERTY_META = "meta";
  @JsonProperty(JSON_PROPERTY_META)
  private Ga4ghRequestMeta meta;

  public static final String JSON_PROPERTY_QUERY = "query";
  @JsonProperty(JSON_PROPERTY_QUERY)
  private Ga4ghGenomicSnpQuery query;

  public Ga4ghGenomicSnpRequest meta(Ga4ghRequestMeta meta) {
    this.meta = meta;
    return this;
  }

  /**
   * Get meta
   * @return meta
   **/
  @JsonProperty("meta")
  @ApiModelProperty(value = "")
  @Valid 
  public Ga4ghRequestMeta getMeta() {
    return meta;
  }

  public void setMeta(Ga4ghRequestMeta meta) {
    this.meta = meta;
  }

  public Ga4ghGenomicSnpRequest query(Ga4ghGenomicSnpQuery query) {
    this.query = query;
    return this;
  }

  /**
   * Get query
   * @return query
   **/
  @JsonProperty("query")
  @ApiModelProperty(required = true, value = "")
  @NotNull @Valid 
  public Ga4ghGenomicSnpQuery getQuery() {
    return query;
  }

  public void setQuery(Ga4ghGenomicSnpQuery query) {
    this.query = query;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Ga4ghGenomicSnpRequest genomicSnpRequest = (Ga4ghGenomicSnpRequest) o;
    return Objects.equals(this.meta, genomicSnpRequest.meta) &&
        Objects.equals(this.query, genomicSnpRequest.query);
  }

  @Override
  public int hashCode() {
    return Objects.hash(meta, query);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Ga4ghGenomicSnpRequest {\n");

    sb.append("    meta: ").append(toIndentedString(meta)).append("\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

