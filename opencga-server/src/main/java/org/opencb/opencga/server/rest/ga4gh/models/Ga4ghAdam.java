/*
 * GA4GH Beacon API Specification
 * A Beacon is a web service for genetic data sharing that can be queried for  information about variants, individuals or samples.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: beacon@ga4gh.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.opencb.opencga.server.rest.ga4gh.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.swagger.annotations.ApiModelProperty;

import javax.validation.Valid;
import java.util.Objects;

/**
 * Ga4ghAdam
 */
@JsonPropertyOrder({
  Ga4ghAdam.JSON_PROPERTY_HEADER,
  Ga4ghAdam.JSON_PROPERTY_PROFILE,
  Ga4ghAdam.JSON_PROPERTY_TERMS,
  Ga4ghAdam.JSON_PROPERTY_META_CONDITIONS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2020-03-24T15:12:46.170Z[Europe/London]")
public class Ga4ghAdam   {
  public static final String JSON_PROPERTY_HEADER = "header";
  @JsonProperty(JSON_PROPERTY_HEADER)
  private Ga4ghHeader header;

  public static final String JSON_PROPERTY_PROFILE = "profile";
  @JsonProperty(JSON_PROPERTY_PROFILE)
  private Ga4ghProfile profile;

  public static final String JSON_PROPERTY_TERMS = "terms";
  @JsonProperty(JSON_PROPERTY_TERMS)
  private Ga4ghTerms terms;

  public static final String JSON_PROPERTY_META_CONDITIONS = "metaConditions";
  @JsonProperty(JSON_PROPERTY_META_CONDITIONS)
  private Ga4ghMetaConditions metaConditions;

  public Ga4ghAdam header(Ga4ghHeader header) {
    this.header = header;
    return this;
  }

  /**
   * Get header
   * @return header
   **/
  @JsonProperty("header")
  @ApiModelProperty(value = "")
  @Valid 
  public Ga4ghHeader getHeader() {
    return header;
  }

  public void setHeader(Ga4ghHeader header) {
    this.header = header;
  }

  public Ga4ghAdam profile(Ga4ghProfile profile) {
    this.profile = profile;
    return this;
  }

  /**
   * Get profile
   * @return profile
   **/
  @JsonProperty("profile")
  @ApiModelProperty(value = "")
  @Valid 
  public Ga4ghProfile getProfile() {
    return profile;
  }

  public void setProfile(Ga4ghProfile profile) {
    this.profile = profile;
  }

  public Ga4ghAdam terms(Ga4ghTerms terms) {
    this.terms = terms;
    return this;
  }

  /**
   * Get terms
   * @return terms
   **/
  @JsonProperty("terms")
  @ApiModelProperty(value = "")
  @Valid 
  public Ga4ghTerms getTerms() {
    return terms;
  }

  public void setTerms(Ga4ghTerms terms) {
    this.terms = terms;
  }

  public Ga4ghAdam metaConditions(Ga4ghMetaConditions metaConditions) {
    this.metaConditions = metaConditions;
    return this;
  }

  /**
   * Get metaConditions
   * @return metaConditions
   **/
  @JsonProperty("metaConditions")
  @ApiModelProperty(value = "")
  @Valid 
  public Ga4ghMetaConditions getMetaConditions() {
    return metaConditions;
  }

  public void setMetaConditions(Ga4ghMetaConditions metaConditions) {
    this.metaConditions = metaConditions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Ga4ghAdam adam = (Ga4ghAdam) o;
    return Objects.equals(this.header, adam.header) &&
        Objects.equals(this.profile, adam.profile) &&
        Objects.equals(this.terms, adam.terms) &&
        Objects.equals(this.metaConditions, adam.metaConditions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(header, profile, terms, metaConditions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Ga4ghAdam {\n");

    sb.append("    header: ").append(toIndentedString(header)).append("\n");
    sb.append("    profile: ").append(toIndentedString(profile)).append("\n");
    sb.append("    terms: ").append(toIndentedString(terms)).append("\n");
    sb.append("    metaConditions: ").append(toIndentedString(metaConditions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

