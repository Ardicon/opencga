/*
 * GA4GH Beacon API Specification
 * A Beacon is a web service for genetic data sharing that can be queried for  information about variants, individuals or samples.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: beacon@ga4gh.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.opencb.opencga.server.rest.ga4gh.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * List of description elements of the clinical relevance described for the variant in relation to specific diseases including a variant classification, the disease identifier, and references. 
 */
@ApiModel(description = "List of description elements of the clinical relevance described for the variant in relation to specific diseases including a variant classification, the disease identifier, and references. ")
@JsonPropertyOrder({
  Ga4ghClinicalRelevance.JSON_PROPERTY_VARIANT_CLASSIFICATION,
  Ga4ghClinicalRelevance.JSON_PROPERTY_DISEASE_ID,
  Ga4ghClinicalRelevance.JSON_PROPERTY_REFERENCES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2020-03-24T15:12:46.170Z[Europe/London]")
public class Ga4ghClinicalRelevance   {
  public static final String JSON_PROPERTY_VARIANT_CLASSIFICATION = "variantClassification";
  @JsonProperty(JSON_PROPERTY_VARIANT_CLASSIFICATION)
  private String variantClassification;

  public static final String JSON_PROPERTY_DISEASE_ID = "diseaseId";
  @JsonProperty(JSON_PROPERTY_DISEASE_ID)
  private String diseaseId;

  public static final String JSON_PROPERTY_REFERENCES = "references";
  @JsonProperty(JSON_PROPERTY_REFERENCES)
  private List<String> references = null;

  public Ga4ghClinicalRelevance variantClassification(String variantClassification) {
    this.variantClassification = variantClassification;
    return this;
  }

  /**
   * Categorical value (benign, likely bening, pathogenic, likely pathogenic or unknown). 
   * @return variantClassification
   **/
  @JsonProperty("variantClassification")
  @ApiModelProperty(example = "pathogenic", value = "Categorical value (benign, likely bening, pathogenic, likely pathogenic or unknown). ")
  
  public String getVariantClassification() {
    return variantClassification;
  }

  public void setVariantClassification(String variantClassification) {
    this.variantClassification = variantClassification;
  }

  public Ga4ghClinicalRelevance diseaseId(String diseaseId) {
    this.diseaseId = diseaseId;
    return this;
  }

  /**
   * Disease ICD10 code and ontology ID from a disease ontology such as HPO, OMIM, Orphanet, MONDO. 
   * @return diseaseId
   **/
  @JsonProperty("diseaseId")
  @ApiModelProperty(example = "HP:0004789", value = "Disease ICD10 code and ontology ID from a disease ontology such as HPO, OMIM, Orphanet, MONDO. ")
  
  public String getDiseaseId() {
    return diseaseId;
  }

  public void setDiseaseId(String diseaseId) {
    this.diseaseId = diseaseId;
  }

  public Ga4ghClinicalRelevance references(List<String> references) {
    this.references = references;
    return this;
  }

  public Ga4ghClinicalRelevance addReferencesItem(String referencesItem) {
    if (this.references == null) {
      this.references = new ArrayList<String>();
    }
    this.references.add(referencesItem);
    return this;
  }

  /**
   * List of PUBMED ID(s) of studie(s) describing the variant-disease association. 
   * @return references
   **/
  @JsonProperty("references")
  @ApiModelProperty(example = "[\"PMC3623669\"]", value = "List of PUBMED ID(s) of studie(s) describing the variant-disease association. ")
  
  public List<String> getReferences() {
    return references;
  }

  public void setReferences(List<String> references) {
    this.references = references;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Ga4ghClinicalRelevance clinicalRelevance = (Ga4ghClinicalRelevance) o;
    return Objects.equals(this.variantClassification, clinicalRelevance.variantClassification) &&
        Objects.equals(this.diseaseId, clinicalRelevance.diseaseId) &&
        Objects.equals(this.references, clinicalRelevance.references);
  }

  @Override
  public int hashCode() {
    return Objects.hash(variantClassification, diseaseId, references);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Ga4ghClinicalRelevance {\n");

    sb.append("    variantClassification: ").append(toIndentedString(variantClassification)).append("\n");
    sb.append("    diseaseId: ").append(toIndentedString(diseaseId)).append("\n");
    sb.append("    references: ").append(toIndentedString(references)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

