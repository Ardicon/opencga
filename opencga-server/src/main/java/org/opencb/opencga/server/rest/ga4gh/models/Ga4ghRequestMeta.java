/*
 * GA4GH Beacon API Specification
 * A Beacon is a web service for genetic data sharing that can be queried for  information about variants, individuals or samples.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: beacon@ga4gh.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.opencb.opencga.server.rest.ga4gh.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import javax.validation.Valid;
import javax.validation.constraints.NotNull;
import java.util.Objects;

/**
 * Format of the responses and version of the Beacon handling this request. 
 */
@ApiModel(description = "Format of the responses and version of the Beacon handling this request. ")
@JsonPropertyOrder({
  Ga4ghRequestMeta.JSON_PROPERTY_REQUEST,
  Ga4ghRequestMeta.JSON_PROPERTY_API_VERSION
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2020-03-24T15:12:46.170Z[Europe/London]")
public class Ga4ghRequestMeta   {
  public static final String JSON_PROPERTY_REQUEST = "request";
  @JsonProperty(JSON_PROPERTY_REQUEST)
  private Object request;

  public static final String JSON_PROPERTY_API_VERSION = "apiVersion";
  @JsonProperty(JSON_PROPERTY_API_VERSION)
  private String apiVersion;

  public Ga4ghRequestMeta request(Object request) {
    this.request = request;
    return this;
  }

  /**
   * Schema version(s) to be used for the components specified 
   * @return request
   **/
  @JsonProperty("request")
  @ApiModelProperty(example = "{\"Individual\":[\"ga4gh-phenopacket-individual-v0.1\",\"ga4gh-schemablocks-individual-v0.1\"],\"Variant\":[\"ga4gh-variant-representation-v0.1\",\"ga4gh-schemablocks-beacon-variant-v0.1\"]}", required = true, value = "Schema version(s) to be used for the components specified ")
  @NotNull @Valid 
  public Object getRequest() {
    return request;
  }

  public void setRequest(Object request) {
    this.request = request;
  }

  public Ga4ghRequestMeta apiVersion(String apiVersion) {
    this.apiVersion = apiVersion;
    return this;
  }

  /**
   * Version of the Beacon to be used to answer the query 
   * @return apiVersion
   **/
  @JsonProperty("apiVersion")
  @ApiModelProperty(example = "v2.0", required = true, value = "Version of the Beacon to be used to answer the query ")
  @NotNull 
  public String getApiVersion() {
    return apiVersion;
  }

  public void setApiVersion(String apiVersion) {
    this.apiVersion = apiVersion;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Ga4ghRequestMeta requestMeta = (Ga4ghRequestMeta) o;
    return Objects.equals(this.request, requestMeta.request) &&
        Objects.equals(this.apiVersion, requestMeta.apiVersion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(request, apiVersion);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Ga4ghRequestMeta {\n");

    sb.append("    request: ").append(toIndentedString(request)).append("\n");
    sb.append("    apiVersion: ").append(toIndentedString(apiVersion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

