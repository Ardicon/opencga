/*
 * GA4GH Beacon API Specification
 * Schemas to be used as default by the Beacon.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: beacon@ga4gh.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.opencb.opencga.server.rest.ga4gh.models.schemas;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Values of ontology IDs specifying the origin of the biosample in organ, tissue and cell type/cell line. For samples with origin in an established cell line, the cell line identifier should be specified in the cell type field. 
 */
@ApiModel(description = "Values of ontology IDs specifying the origin of the biosample in organ, tissue and cell type/cell line. For samples with origin in an established cell line, the cell line identifier should be specified in the cell type field. ")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-03-24T09:26:11.315Z[Europe/London]")
public class Ga4ghSampleOrigin {
  public static final String SERIALIZED_NAME_ORGAN = "organ";
  @SerializedName(SERIALIZED_NAME_ORGAN)
  private String organ;

  public static final String SERIALIZED_NAME_TISSUE = "tissue";
  @SerializedName(SERIALIZED_NAME_TISSUE)
  private String tissue;

  public static final String SERIALIZED_NAME_CELL_TYPE = "cellType";
  @SerializedName(SERIALIZED_NAME_CELL_TYPE)
  private String cellType;


  public Ga4ghSampleOrigin organ(String organ) {
    
    this.organ = organ;
    return this;
  }

   /**
   * Ontology ID from Uber-anatomy ontology (UBERON) or BRENDA tissue / enzyme source (BTO) ontologies identifying the source organ of the biosample. 
   * @return organ
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "UBERON:0002107", value = "Ontology ID from Uber-anatomy ontology (UBERON) or BRENDA tissue / enzyme source (BTO) ontologies identifying the source organ of the biosample. ")

  public String getOrgan() {
    return organ;
  }


  public void setOrgan(String organ) {
    this.organ = organ;
  }


  public Ga4ghSampleOrigin tissue(String tissue) {
    
    this.tissue = tissue;
    return this;
  }

   /**
   * Ontology ID from Uber-anatomy ontology (UBERON) or BRENDA tissue / enzyme source (BTO) ontologies identifying the source tissue of the biosample. 
   * @return tissue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "UBERON:0001281", value = "Ontology ID from Uber-anatomy ontology (UBERON) or BRENDA tissue / enzyme source (BTO) ontologies identifying the source tissue of the biosample. ")

  public String getTissue() {
    return tissue;
  }


  public void setTissue(String tissue) {
    this.tissue = tissue;
  }


  public Ga4ghSampleOrigin cellType(String cellType) {
    
    this.cellType = cellType;
    return this;
  }

   /**
   * Ontology ID from BRENDA tissue / enzyme source (BTO) or Cell Ontology (CL) ontologies identifying the source cell type or cell line origin of the biosample. 
   * @return cellType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "CL:0000091", value = "Ontology ID from BRENDA tissue / enzyme source (BTO) or Cell Ontology (CL) ontologies identifying the source cell type or cell line origin of the biosample. ")

  public String getCellType() {
    return cellType;
  }


  public void setCellType(String cellType) {
    this.cellType = cellType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Ga4ghSampleOrigin sampleOrigin = (Ga4ghSampleOrigin) o;
    return Objects.equals(this.organ, sampleOrigin.organ) &&
        Objects.equals(this.tissue, sampleOrigin.tissue) &&
        Objects.equals(this.cellType, sampleOrigin.cellType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(organ, tissue, cellType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Ga4ghSampleOrigin {\n");
    sb.append("    organ: ").append(toIndentedString(organ)).append("\n");
    sb.append("    tissue: ").append(toIndentedString(tissue)).append("\n");
    sb.append("    cellType: ").append(toIndentedString(cellType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

