/*
 * GA4GH Beacon API Specification
 * A Beacon is a web service for genetic data sharing that can be queried for  information about variants, individuals or samples.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: beacon@ga4gh.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.opencb.opencga.server.rest.ga4gh.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import javax.validation.Valid;
import javax.validation.constraints.NotNull;
import java.util.Objects;

/**
 * Data use conditions ruling this dataset. 
 */
@ApiModel(description = "Data use conditions ruling this dataset. ")
@JsonPropertyOrder({
  Ga4ghDataUseConditions.JSON_PROPERTY_CONSENT_CODE_DATA_USE,
  Ga4ghDataUseConditions.JSON_PROPERTY_ADAM_DATA_USE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2020-03-24T15:12:46.170Z[Europe/London]")
public class Ga4ghDataUseConditions   {
  public static final String JSON_PROPERTY_CONSENT_CODE_DATA_USE = "consentCodeDataUse";
  @JsonProperty(JSON_PROPERTY_CONSENT_CODE_DATA_USE)
  private Ga4ghConsentCodeDataUse consentCodeDataUse;

  public static final String JSON_PROPERTY_ADAM_DATA_USE = "adamDataUse";
  @JsonProperty(JSON_PROPERTY_ADAM_DATA_USE)
  private Ga4ghAdam adamDataUse;

  public Ga4ghDataUseConditions consentCodeDataUse(Ga4ghConsentCodeDataUse consentCodeDataUse) {
    this.consentCodeDataUse = consentCodeDataUse;
    return this;
  }

  /**
   * Get consentCodeDataUse
   * @return consentCodeDataUse
   **/
  @JsonProperty("consentCodeDataUse")
  @ApiModelProperty(required = true, value = "")
  @NotNull @Valid 
  public Ga4ghConsentCodeDataUse getConsentCodeDataUse() {
    return consentCodeDataUse;
  }

  public void setConsentCodeDataUse(Ga4ghConsentCodeDataUse consentCodeDataUse) {
    this.consentCodeDataUse = consentCodeDataUse;
  }

  public Ga4ghDataUseConditions adamDataUse(Ga4ghAdam adamDataUse) {
    this.adamDataUse = adamDataUse;
    return this;
  }

  /**
   * Get adamDataUse
   * @return adamDataUse
   **/
  @JsonProperty("adamDataUse")
  @ApiModelProperty(required = true, value = "")
  @NotNull @Valid 
  public Ga4ghAdam getAdamDataUse() {
    return adamDataUse;
  }

  public void setAdamDataUse(Ga4ghAdam adamDataUse) {
    this.adamDataUse = adamDataUse;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Ga4ghDataUseConditions dataUseConditions = (Ga4ghDataUseConditions) o;
    return Objects.equals(this.consentCodeDataUse, dataUseConditions.consentCodeDataUse) &&
        Objects.equals(this.adamDataUse, dataUseConditions.adamDataUse);
  }

  @Override
  public int hashCode() {
    return Objects.hash(consentCodeDataUse, adamDataUse);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Ga4ghDataUseConditions {\n");

    sb.append("    consentCodeDataUse: ").append(toIndentedString(consentCodeDataUse)).append("\n");
    sb.append("    adamDataUse: ").append(toIndentedString(adamDataUse)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

