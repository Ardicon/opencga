/*
 * GA4GH Beacon API Specification
 * A Beacon is a web service for genetic data sharing that can be queried for  information about variants, individuals or samples.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: beacon@ga4gh.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.opencb.opencga.server.rest.ga4gh.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import javax.validation.Valid;
import javax.validation.constraints.NotNull;
import java.util.Objects;

/**
 * Organization owning the beacon. 
 */
@ApiModel(description = "Organization owning the beacon. ")
@JsonPropertyOrder({
  Ga4ghBeaconOrganization.JSON_PROPERTY_ID,
  Ga4ghBeaconOrganization.JSON_PROPERTY_NAME,
  Ga4ghBeaconOrganization.JSON_PROPERTY_DESCRIPTION,
  Ga4ghBeaconOrganization.JSON_PROPERTY_ADDRESS,
  Ga4ghBeaconOrganization.JSON_PROPERTY_WELCOME_URL,
  Ga4ghBeaconOrganization.JSON_PROPERTY_CONTACT_URL,
  Ga4ghBeaconOrganization.JSON_PROPERTY_LOGO_URL,
  Ga4ghBeaconOrganization.JSON_PROPERTY_INFO
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2020-03-24T15:12:46.170Z[Europe/London]")
public class Ga4ghBeaconOrganization   {
  public static final String JSON_PROPERTY_ID = "id";
  @JsonProperty(JSON_PROPERTY_ID)
  private String id;

  public static final String JSON_PROPERTY_NAME = "name";
  @JsonProperty(JSON_PROPERTY_NAME)
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  private String description;

  public static final String JSON_PROPERTY_ADDRESS = "address";
  @JsonProperty(JSON_PROPERTY_ADDRESS)
  private String address;

  public static final String JSON_PROPERTY_WELCOME_URL = "welcomeUrl";
  @JsonProperty(JSON_PROPERTY_WELCOME_URL)
  private String welcomeUrl;

  public static final String JSON_PROPERTY_CONTACT_URL = "contactUrl";
  @JsonProperty(JSON_PROPERTY_CONTACT_URL)
  private String contactUrl;

  public static final String JSON_PROPERTY_LOGO_URL = "logoUrl";
  @JsonProperty(JSON_PROPERTY_LOGO_URL)
  private String logoUrl;

  public static final String JSON_PROPERTY_INFO = "info";
  @JsonProperty(JSON_PROPERTY_INFO)
  private Object info;

  public Ga4ghBeaconOrganization id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Unique identifier of the organization. 
   * @return id
   **/
  @JsonProperty("id")
  @ApiModelProperty(required = true, value = "Unique identifier of the organization. ")
  @NotNull 
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Ga4ghBeaconOrganization name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Name of the organization. 
   * @return name
   **/
  @JsonProperty("name")
  @ApiModelProperty(required = true, value = "Name of the organization. ")
  @NotNull 
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Ga4ghBeaconOrganization description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Description of the organization. 
   * @return description
   **/
  @JsonProperty("description")
  @ApiModelProperty(value = "Description of the organization. ")
  
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Ga4ghBeaconOrganization address(String address) {
    this.address = address;
    return this;
  }

  /**
   * Address of the organization. 
   * @return address
   **/
  @JsonProperty("address")
  @ApiModelProperty(value = "Address of the organization. ")
  
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }

  public Ga4ghBeaconOrganization welcomeUrl(String welcomeUrl) {
    this.welcomeUrl = welcomeUrl;
    return this;
  }

  /**
   * URL of the website of the organization (RFC 3986 format). 
   * @return welcomeUrl
   **/
  @JsonProperty("welcomeUrl")
  @ApiModelProperty(value = "URL of the website of the organization (RFC 3986 format). ")
  
  public String getWelcomeUrl() {
    return welcomeUrl;
  }

  public void setWelcomeUrl(String welcomeUrl) {
    this.welcomeUrl = welcomeUrl;
  }

  public Ga4ghBeaconOrganization contactUrl(String contactUrl) {
    this.contactUrl = contactUrl;
    return this;
  }

  /**
   * URL with the contact for the beacon operator/maintainer, e.g. link to a contact form (RFC 3986 format) or an email (RFC 2368 format).
   * @return contactUrl
   **/
  @JsonProperty("contactUrl")
  @ApiModelProperty(value = "URL with the contact for the beacon operator/maintainer, e.g. link to a contact form (RFC 3986 format) or an email (RFC 2368 format).")
  
  public String getContactUrl() {
    return contactUrl;
  }

  public void setContactUrl(String contactUrl) {
    this.contactUrl = contactUrl;
  }

  public Ga4ghBeaconOrganization logoUrl(String logoUrl) {
    this.logoUrl = logoUrl;
    return this;
  }

  /**
   * URL to the logo (PNG/JPG/SVG format) of the organization (RFC 3986 format).
   * @return logoUrl
   **/
  @JsonProperty("logoUrl")
  @ApiModelProperty(value = "URL to the logo (PNG/JPG/SVG format) of the organization (RFC 3986 format).")
  
  public String getLogoUrl() {
    return logoUrl;
  }

  public void setLogoUrl(String logoUrl) {
    this.logoUrl = logoUrl;
  }

  public Ga4ghBeaconOrganization info(Object info) {
    this.info = info;
    return this;
  }

  /**
   * Additional unspecified metadata about the host Organization. 
   * @return info
   **/
  @JsonProperty("info")
  @ApiModelProperty(example = "{\"additionalInfoKey\":\"additionalInfoValue\"}", value = "Additional unspecified metadata about the host Organization. ")
  @Valid 
  public Object getInfo() {
    return info;
  }

  public void setInfo(Object info) {
    this.info = info;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Ga4ghBeaconOrganization beaconOrganization = (Ga4ghBeaconOrganization) o;
    return Objects.equals(this.id, beaconOrganization.id) &&
        Objects.equals(this.name, beaconOrganization.name) &&
        Objects.equals(this.description, beaconOrganization.description) &&
        Objects.equals(this.address, beaconOrganization.address) &&
        Objects.equals(this.welcomeUrl, beaconOrganization.welcomeUrl) &&
        Objects.equals(this.contactUrl, beaconOrganization.contactUrl) &&
        Objects.equals(this.logoUrl, beaconOrganization.logoUrl) &&
        Objects.equals(this.info, beaconOrganization.info);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, description, address, welcomeUrl, contactUrl, logoUrl, info);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Ga4ghBeaconOrganization {\n");

    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    welcomeUrl: ").append(toIndentedString(welcomeUrl)).append("\n");
    sb.append("    contactUrl: ").append(toIndentedString(contactUrl)).append("\n");
    sb.append("    logoUrl: ").append(toIndentedString(logoUrl)).append("\n");
    sb.append("    info: ").append(toIndentedString(info)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

