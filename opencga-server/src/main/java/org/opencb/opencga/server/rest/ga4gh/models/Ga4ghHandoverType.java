/*
 * GA4GH Beacon API Specification
 * A Beacon is a web service for genetic data sharing that can be queried for  information about variants, individuals or samples.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: beacon@ga4gh.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.opencb.opencga.server.rest.ga4gh.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import javax.validation.constraints.NotNull;
import java.util.Objects;

/**
 * Handover type, as an Ontology_term object with CURIE syntax for the  &#x60;id&#x60; value.  
 */
@ApiModel(description = "Handover type, as an Ontology_term object with CURIE syntax for the  `id` value.  ")
@JsonPropertyOrder({
  Ga4ghHandoverType.JSON_PROPERTY_ID,
  Ga4ghHandoverType.JSON_PROPERTY_LABEL
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2020-03-24T15:12:46.170Z[Europe/London]")
public class Ga4ghHandoverType   {
  public static final String JSON_PROPERTY_ID = "id";
  @JsonProperty(JSON_PROPERTY_ID)
  private String id = "CUSTOM";

  public static final String JSON_PROPERTY_LABEL = "label";
  @JsonProperty(JSON_PROPERTY_LABEL)
  private String label = "null";

  public Ga4ghHandoverType id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Use &#x60;CUSTOM&#x60; for the &#x60;id&#x60; when no ontology is available.
   * @return id
   **/
  @JsonProperty("id")
  @ApiModelProperty(example = "EFO:0004157", required = true, value = "Use `CUSTOM` for the `id` when no ontology is available.")
  @NotNull 
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Ga4ghHandoverType label(String label) {
    this.label = label;
    return this;
  }

  /**
   * This would be the \&quot;preferred Label\&quot; in the case of an ontology term.
   * @return label
   **/
  @JsonProperty("label")
  @ApiModelProperty(example = "BAM format", value = "This would be the \"preferred Label\" in the case of an ontology term.")
  
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Ga4ghHandoverType handoverType = (Ga4ghHandoverType) o;
    return Objects.equals(this.id, handoverType.id) &&
        Objects.equals(this.label, handoverType.label);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, label);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Ga4ghHandoverType {\n");

    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

