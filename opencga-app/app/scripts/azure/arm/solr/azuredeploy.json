{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "diskType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Storage Account type"
      }
    },
    "vmName": {
      "type": "string",
      "defaultValue": "opencga-solr",
      "metadata": {
        "description": "VM name"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "Size of the VM"
      }
    },
    "zookeeperVMSize": {
      "type": "string",
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "Size of the zookeeper VM"
      }
    },
    "imagePublisher": {
      "type": "string",
      "defaultValue": "Canonical",
      "metadata": {
        "description": "Image Publisher"
      }
    },
    "imageOffer": {
      "type": "string",
      "defaultValue": "UbuntuServer",
      "metadata": {
        "description": "Image Offer"
      }
    },
    "imageSKU": {
      "type": "string",
      "defaultValue": "14.04.5-LTS",
      "metadata": {
        "description": "Image SKU"
      }
    },
    "clusterLoginUserName": {
      "type": "string",
      "metadata": {
        "description": "Admin username"
      }
    },
    "clusterLoginPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password"
      }
    },
    "highAvailability": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": ""
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "subnetId": {
      "type": "string",
      "metadata": {
        "description": "Subnet ID."
      }
    },
    "artifactsLocation": {
      "type": "string",
      "defaultValue" : "https://github.com/j-coll/opencga/blob/issue-938/opencga-app/app/scripts/azure/arm/",
      "metadata": {
        "description": "Artifacts location."
      }
    },
    "artifactsLocationSasToken": {
      "type": "string",
      "defaultValue" : "",
      "metadata": {
        "description": "Artifacts location."
      }
    }
  },
  "variables": {
    "availabilitySetName": "solrAvSet",
    "nicName": "solrNIC",
    "subnetPrefix": "10.0.2.",
    "vmExtensionName": "solrExtension",
    "scaleNumber": "[if(parameters('highAvailability'), 2, 1)]",
    "zookeeperScaleNumber": "[if(parameters('highAvailability'), 3, 0)]",
    "copy" : [
      {
        "name" : "zookeeperIPs",
        "count" : "[variables('zookeeperScaleNumber')]",
        "input" : {
          "ip" : "[concat(variables('subnetPrefix'), add(add(5, variables('scaleNumber')), copyIndex('zookeeperIPs')))]"
        }
      }
    ],
    "customScriptFilePath": "[concat(parameters('artifactsLocation'), 'solr/solr-setup.sh')]",
    "customScriptCommandToExecute": "[concat('bash solr-setup.sh ', variables('zookeeperScaleNumber'), ' ', variables('subnetPrefix'), '{', add(5, variables('scaleNumber')), '..', add(add(4, variables('scaleNumber')), variables('zookeeperScaleNumber')),'}')]"
  },
  "resources": [
    {
      "condition": "[parameters('highAvailability')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "name": "zookeeper",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('artifactsLocation'), '/solr/zookeeper/azuredeploy.json', parameters('artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "clusterLoginUserName" : {
            "value": "[parameters('clusterLoginUserName')]"
          },
          "clusterLoginPassword" : {
            "value": "[parameters('clusterLoginPassword')]"
          },
          "subnetId": {
            "value": "[parameters('subnetId')]"
          },
          "privateIPFirst" : {
            "value" : "[add(5, variables('scaleNumber'))]"
          },
          "scaleNumber" : {
            "value" : "[variables('zookeeperScaleNumber')]"
          },
          "vmSize" : {
            "value" : "[parameters('zookeeperVMSize')]"
          }
        }
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/availabilitySets",
      "location": "[parameters('location')]",
      "name": "[variables('availabilitySetName')]",
      "properties": {
        "PlatformUpdateDomainCount": 20,
        "PlatformFaultDomainCount": 2
      },
      "sku": {
        "name": "Aligned"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'), copyIndex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "foo",
        "count": "[variables('scaleNumber')]"
      },
      "dependsOn": [],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat(variables('subnetPrefix'), copyIndex(4))]",
              "subnet": {
                "id": "[parameters('subnetId')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('vmName'), copyIndex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "foo",
        "count": "[variables('scaleNumber')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), copyIndex())]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('vmName'), copyIndex())]",
          "adminUsername": "[parameters('clusterLoginUserName')]",
          "adminPassword": "[parameters('clusterLoginPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imagePublisher')]",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('vmName'), copyIndex(),'_OSDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[parameters('diskType')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'), copyIndex()))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmName'), copyIndex(),'/', variables('vmExtensionName'))]",
      "apiVersion": "2015-05-01-preview",
      "location": "[parameters('location')]",
      "copy": {
        "name": "foo",
        "count": "[variables('scaleNumber')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'), copyIndex())]",
        "[if(parameters('highAvailability'),'zookeeper',concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName')))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[variables('customScriptFilePath')]"
          ],
          "commandToExecute": "[concat(variables('customScriptCommandToExecute'), ' ', copyIndex(), ' ', variables('scaleNumber'))]"
        }
      }
    }
  ]
}
