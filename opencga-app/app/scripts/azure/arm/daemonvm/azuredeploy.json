{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": ""
            }
        },
        "_artifactsLocationSasToken": {
            "type": "string",
            "metadata": {
                "description": ""
            }
        },
        "subnetName": {
            "type": "string",
            "defaultvalue": "default"
        },
        "virtualNetworkId": {
            "type": "string"
        },
        "publicIpAddressType": {
            "type": "string",
            "defaultvalue": "Dynamic"
        },
        "publicIpAddressSku": {
            "type": "string",
            "defaultvalue": "Basic"
        },
        "osDiskType": {
            "type": "string",
            "defaultvalue": "Premium_LRS"
        },
        "virtualMachineSize": {
            "type": "string",
            "defaultvalue": "Standard_L8s"
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "opencgaadmin"
        },
        "adminPassword": {
            "type": "securestring"
        },
        "hdInsightSshDns": {
            "type": "string"
        },
        "hdInsightSshUsername": {
            "type": "string"
        },
        "hdInsightSshPassword": {
            "type": "securestring"
        },
        "initContainerImage": {
            "type": "string"
        },
        "daemonContainerImage": {
            "type": "string"
        },
        "storageOption": {
            "type": "string",
            "defaultValue": "azurefiles"
        },
        "avereClusterIpRange": {
            "type": "string"
        },
        "azureFilesAccountName": {
            "type": "string"
        },
        "azureFilesAccountKey": {
            "type": "securestring"
        },
        "azureFilesShareName": {
            "type": "string"
        }
    },
    "variables": {
        "vnetId": "[parameters('virtualNetworkId')]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]",
        "singleQuote": "'",
        "getScriptCmd": "[concat('wget ',parameters('_artifactsLocation'),'/avere/mount.py -O /tmp/mount.py')]",
        "avereArgs": "[concat('avere ', parameters('avereClusterIpRange'))]",
        "azureFileArgs": "[concat('azurefiles ', parameters('azureFilesAccountName'),' ', parameters('azureFilesShareName'),' ', parameters('azureFilesAccountKey'))]",
        "mountArgs": "[if(equals(toLower(parameters('storageOption')), 'avere'), variables('avereArgs'), variables('azureFileArgs'))]",
        "mountCmd": "[concat('python3 /tmp/mount.py ', variables('mountArgs'))]",
        "initCmd": "[concat('docker run -e HD_INSIGHTS_SSH_DNS=',parameters('hdInsightSshDns'),' -e HD_INSIGHTS_SSH_USER=',parameters('hdInsightSshUsername'),' -e HD_INSIGHTS_SSH_PASS=',parameters('hdInsightSshPassword'),' ',parameters('initContainerImage'))]",
        "cloud-init": [
            "#cloud-config",
            "package_upgrade: true",
            "package_reboot_if_required: true",
            "",
            "bootcmd:",
            "[concat(' - ',variables('singleQuote'),variables('getScriptCmd'),variables('singleQuote'))]",
            "",
            "runcmd:",
            " - 'apt-get update'",
            " - 'curl -fsSL https://get.docker.com/ | sh'",
            " - 'curl -fsSL https://get.docker.com/gpg | sudo apt-key add -'",
            "[concat(' - ',variables('singleQuote'),variables('mountCmd'),variables('singleQuote'))]",
            "[concat(' - ',variables('singleQuote'),variables('initCmd'),variables('singleQuote'))]",
            "",
            "write_files:",
            "- path: /etc/systemd/system/opencga.service",
            "  permissions: 0644",
            "  owner: root",
            "  content: |    ",
            "    [Unit]",
            "    Description=OpenCGA daemon",
            "    Requires=docker.service",
            "    After=docker.service",
            "    [Service]",
            "    Restart=always",
            "[concat('    ExecStart=/usr/bin/docker run --name=opencga-daemon -e OPENCGA_PASS=',parameters('adminPassword'),' ',parameters('daemonContainerImage'))]",
            "    ExecStop=/usr/bin/docker stop opencga-daemon",
            ""
        ],
        "cloud-init-string": "[replace(replace(replace(string(variables('cloud-init')),'\",\"','\n'),'[\"',''),'\"]','')]",
        "customData": "[base64(variables('cloud-init-string'))]"

    },
    "resources": [
        {
            "name": "daemonvm-nic",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2018-04-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIpAddresses/', 'daemonvm-ip')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', 'daemonvm-ip')]"
                            }
                        }
                    }
                ]

            },
            "tags": {}
        },

        {
            "name": "daemonvm-ip",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2018-08-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIpAllocationMethod": "[parameters('publicIpAddressType')]"
            },
            "sku": {
                "name": "[parameters('publicIpAddressSku')]"
            },
            "tags": {}
        },
        {
            "name": "daemonvm",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2018-06-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', 'daemonvm-nic')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('osDiskType')]"
                        }
                    },
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "18.04-LTS",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', 'daemonvm-nic')]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "daemonvm",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "customData": "[variables('customData')]"
                }
            },
            "tags": {}
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        },
        "cloud-config-string": {
            "type": "string",
            "value": "[variables('cloud-init-string')]"
        }

    }
}