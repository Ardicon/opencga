{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "vmSize": {
            "type": "string",
            "metadata": {
                "description": "Size of vm (e.g. Standard_D1_v2)"
            },
            "defaultValue": "Standard_D1_v2"
        },
        "dnsLabelPrefix": {
            "type": "string",
            "defaultValue": "cgamongo",
            "metadata": {
                "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
            }
        },
        "certificateEmail": {
            "type": "string",
            "metadata": {
                "description": "Email address used for mongoDB letsencrypt certificates"
            }
        },
        "clusterSize": {
            "type": "int",
            "defaultValue": 3,
            "allowedValues": [1, 3, 5, 7, 9, 11],
            "metadata": {
                "description": "Amount of VMs to deploy for the mongodb replica set"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "The username for all mongoDB VMs (also used for connecting oer SSH)"
            }
        },
        "adminSSHKeyData": {
            "type": "string",
            "metadata": {
                "description": "The mongoDB VM public SSH key"
            }
        },
        "mongoDBUsername": {
            "type": "string",
            "defaultValue": "opencga",
            "metadata": {
                "description": "The username for connecting to mongoDB"
            }
        },
        "mongoDBPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password for connecting to mongoDB"
            }
        },
        "subnetId": {
            "type": "string",
            "metadata": {
                "description": "Subnet ID"
            }
        }
    },
    "variables": {
        "vmName": "mongo-vm",
        "nicName": "mongo-nic",
        "publicIPAddressName": "mongo-publicip",
        "publicIPAddressType": "Static",
        "dnsPrefix": "[concat(parameters('dnsLabelPrefix'), uniquestring(resourceGroup().id))]",
        "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
        "copy": [
            {
                "name": "dnsNames",
                "count": "[parameters('clusterSize')]",
                "input": {
                   "fqdn": "[concat(variables('dnsPrefix'),copyIndex('dnsNames'),'.',parameters('location'),'.cloudapp.azure.com')]"
                }
            }
        ]
    },
    "resources": [
        {
            "apiVersion": "2017-10-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicName'), copyIndex())]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "mongo-ip",
                "count": "[parameters('clusterSize')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'), copyIndex())]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIPAddressName'), copyIndex()))]"
                            },
                            "subnet": {
                                "id": "[parameters('subnetId')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2017-10-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(variables('publicIPAddressName'), copyIndex())]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "mongo-ip",
                "count": "[parameters('clusterSize')]"
            },
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[concat(variables('dnsPrefix'), copyIndex())]"
                }
            }
        },
        {
            "name": "[concat(variables('vmName'), copyIndex())]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2018-06-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), copyIndex())]"
            ],
            "copy": {
                "name": "mongo-rs",
                "count": "[parameters('clusterSize')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "osType": "Linux",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS"
                        }
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": 1023,
                            "lun": 0,
                            "createOption": "Empty"
                        }
                    ],
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "16.04-LTS",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'), copyIndex()))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[concat(variables('vmName'), copyIndex())]",
                    "customData": "[base64('#cloud-config\n\nwrite_files:\n -  encoding: gzip\n    content: !!binary |\n        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\n    path: /opt/installmongodb.sh\n    permissions: \"0744\"\n -  encoding: gzip\n    content: !!binary |\n        H4sIAPYFNlwCA5WRz0rEMBDG73mKsduDijW7Fw/CHoRF8OCfV0jS6TaYJiUZuyzqu5uYLhtFBS8JzMz3+z5mFidcasulCD1jAQkaZGwBG+y0RZiE10IaDGzzeH9z97CuV6nr0eIOFHpi6ZGOcin1lBtkkhpBGAgMUkCr/H4k6HQkQec8DM5uXZqOLu1htHsxRvVC2/PLEQcWebF6G4vr+tQEaCbgSIoXRC686vWEvKpzvop/hcAbkNAGGgurM4aqd1DVR3D1PcLo9fSM+zLAUyz9J0CJ+MM+YatyX+TyVj6tlSB4LYJeFKr3REXMWUIw/CiLuHRCr7c9FYvOyH5wLVwtlz8JY7KdzcOtvJ7/Xxx8zCE8zTcM6CetcNYemuwDY5zi9FcCAAA=\n    path: /opt/renew_mongo_cert.sh\n    permissions: \"0744\"\n\n')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[variables('sshKeyPath')]",
                                    "keyData": "[parameters('adminSSHKeyData')]"
                                }
                            ]
                        }
                    },
                    "adminUsername": "[parameters('adminUsername')]",
                    "allowExtensionOperations": true
                }
            },
            "tags": {}
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmName'), copyIndex(), '/configureagent')]",
            "apiVersion": "2017-12-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'), copyIndex())]"
            ],
            "copy": {
                "name": "mongo-rs-ca",
                "count": "[parameters('clusterSize')]"
            },
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "timestamp": 4
                },
                "protectedSettings": {
                    "commandToExecute": "[concat(' VM_INDEX=', copyIndex(), ' CLUSTER_SIZE=', parameters('clusterSize'), ' CERT_EMAIL=', parameters('certificateEmail'),' MONGODB_USERNAME=', parameters('mongoDBUsername'),' MONGODB_PASSWORD=', parameters('mongoDBPassword'),' APP_DNS_NAME=', reference(resourceId('Microsoft.Network/publicIPAddresses',concat(variables('publicIPAddressName'),copyIndex())),'2017-10-01').dnsSettings.fqdn, ' /bin/bash /opt/installmongodb.sh')]"
                }
            }
        }
    ],
    "outputs": {
        "mongoDBUser": {
            "value": "[parameters('mongoDBUsername')]",
            "type": "string"
        },
        "mongoDBPassword": {
            "value": "[parameters('mongoDBPassword')]",
            "type": "string"
        },
        "mongoClusterSize": {
            "value": "[parameters('clusterSize')]",
            "type": "int"
        },
        "dnsNames": {
            "value": "[variables('dnsNames')]",
            "type": "array"
        }
    }
}
