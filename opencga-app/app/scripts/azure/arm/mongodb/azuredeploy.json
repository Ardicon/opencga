{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "vmSize": {
            "type": "string",
            "metadata": {
                "description": "Size of vm (e.g. Standard_D1_v2)"
            },
            "defaultValue": "Standard_D1_v2"
        },
        "dnsLabelPrefix": {
            "type": "string",
            "defaultValue": "cgamongo",
            "metadata": {
                "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
            }
        },
        "certificateEmail": {
            "type": "string",
            "metadata": {
                "description": "Email address used for mongoDB letsencrypt certificates"
            }
        },
        "clusterSize": {
            "type": "int",
            "defaultValue": 3,
            "allowedValues": [1, 3, 5, 7, 9, 11],
            "metadata": {
                "description": "Amount of VMs to deploy for the mongodb replica set"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "The username for all mongoDB VMs (also used for connecting oer SSH)"
            }
        },
        "adminSSHKeyData": {
            "type": "string",
            "metadata": {
                "description": "The mongoDB VM public SSH key"
            }
        },
        "mongoDBUsername": {
            "type": "string",
            "defaultValue": "opencga",
            "metadata": {
                "description": "The username for connecting to mongoDB"
            }
        },
        "mongoDBPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password for connecting to mongoDB"
            }
        },
        "subnetId": {
            "type": "string",
            "metadata": {
                "description": "Subnet ID"
            }
        },
        "LogAnalyticsWorkspaceResourceID": {
            "type": "string",
            "metadata": {
                "description": "Log Analytics Workspace Resource ID"
            }
        }

    },
    "variables": {
        "vmName": "mongo-vm",
        "nicName": "mongo-nic",
        "publicIPAddressName": "mongo-publicip",
        "publicIPAddressType": "Static",
        "dnsPrefix": "[concat(parameters('dnsLabelPrefix'), uniquestring(resourceGroup().id))]",
        "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
        "copy": [
            {
                "name": "dnsNames",
                "count": "[parameters('clusterSize')]",
                "input": {
                   "fqdn": "[concat(variables('dnsPrefix'),copyIndex('dnsNames'),'.',parameters('location'),'.cloudapp.azure.com')]"
                }
            }
        ]
    },
    "resources": [
        {
            "apiVersion": "2017-10-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicName'), copyIndex())]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "mongo-ip",
                "count": "[parameters('clusterSize')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'), copyIndex())]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIPAddressName'), copyIndex()))]"
                            },
                            "subnet": {
                                "id": "[parameters('subnetId')]"
                            }
                        }
                    }
                ]
            },
            "resources": [
                {
                    "type": "providers/diagnosticSettings",
                    "name": "[concat('Microsoft.Insights/', concat(variables('nicName'), copyIndex()))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'), copyIndex()))]"
                    ],
                    "apiVersion": "2017-05-01-preview",
                    "properties": {
                      "name": "[concat(variables('nicName'), copyIndex())]",
                      "workspaceId": "[parameters('LogAnalyticsWorkspaceResourceID')]",
                      "logs": [

                      ],
                      "metrics": [
                        {
                          "category": "AllMetrics",
                          "enabled": true,
                          "retentionPolicy": {
                            "enabled": false,
                            "days": 0
                          }
                        }
                      ]
                    }
                  }
            ]
        },
        {
            "apiVersion": "2017-10-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(variables('publicIPAddressName'), copyIndex())]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "mongo-ip",
                "count": "[parameters('clusterSize')]"
            },
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[concat(variables('dnsPrefix'), copyIndex())]"
                }
            }
        },
        {
            "name": "[concat(variables('vmName'), copyIndex())]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2018-06-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), copyIndex())]"
            ],
            "copy": {
                "name": "mongo-rs",
                "count": "[parameters('clusterSize')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "osType": "Linux",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS"
                        }
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": 1023,
                            "lun": 0,
                            "createOption": "Empty"
                        }
                    ],
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "16.04-LTS",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'), copyIndex()))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[concat(variables('vmName'), copyIndex())]",
                    "customData": "[base64('#cloud-config\n\nwrite_files:\n -  encoding: gzip\n    content: !!binary |\n        H4sIAAuHXVwCA71Ye3PiOBL/n0/Ra1IDycQYmLyGTKaODMxV6iaPCsnu1SZZStgCezGSV5IhbIbvfi3JGIeQmZ2rrQ1JMK3ulvr16xbln7xBxLwBkWGpVFZhJEH6IkoU4NNMkCShAURMcVAhhQlnIx4MQNFJEhNFcQVQlB7slcq/p1JBSAWFIRcg6BAfmU9LJUkVuPheBuqHHLbaV1f9zkWvf9E+7+bE88uLf192Tvu3ve71xoWrdq/3y+V1J1/41L2+6XfP22dfctLP5/2zi073vyueL7e9m+51v3f2a7dUiphUJI47NJFQ3YanEuAPSZQ7IWIMIY8DmJE4YukjGVGm8uURGpAmAdq7RhoJElBw58/I2S4g+VDNiKBuInhChYqodH0+QRcWJcZ0DiSYgqufJBVTKiAcJy3Pyz/X0kHKVFpD4dZRHTkF9afQfP+u3u60u0ef2p/36/vvu93Dd6ene6f7R4eNZrvZfN/43N5rd/bNTsYbTkAHcAdE+OEJmQQHe7tETA724AFCpRKJWwqa8FoW4xoXIw9P6Nnd4ZGyiMReturq1Xe1A5iksYrwkJI68BXzgoJHlW8EJU+FT2UtjqSqBUVJFyUN+XsuXvrSnUNB3LDIucQs9FUMlJFBvMzNmvZZ5GdqgsDVqrRdMlJczLWmlNkDf4MlSUjLx5gNuPKy9x84KhtF7BEyOUjmKuTMzT66ZrFkRMszEqEupqI4k8GaI1MSxdoga2VMaQKN/dKihIXkE/aZiws660RyLPMULsMXzsfS1F3KEoK5piLOsHADzWd4Ot2feyfVrepQk8CNofnRC+jUYyme+SvQEToAXA6VqiHf/dZ62NluVZ4vWWple9ueX++HejUIOFtPeoe7fz0snGOzGHDzpn8ieVU4k+FcZDyMasueMeRmXd7eXN3enGxVtUWP4EoUbSzw4G8a24YhGsLdHW5tGR04OYEdZ4juw10QsAQlAeTeAKWd6uzAw8OxxjKWH6+MhqQs2OC6nAUtnRDVZsE5cirt/czihWM9EWkzXnKtQpSrlpCICAFnDgZpCgfEX0Znq41N0VbUPKEnR+90JKQNnvaCYZiMhxJcBfRR7RlqIyMHkQAPM5QEAlPdEvWRdBSJH1vedY6h7KdpFKC/B/E4CjTvlMQp1Y6/vT3rWKntAp5o6snWUya4QPpKpWbSx8Ig0yFBkJC7jOvY7OoDADTwr+nAx48WL4ZYPAPtQwReKrC2PmnEHEY+PuZOlBgWN8JeAhXplcGiY5+RCZX9EBtYf5D6Y6r6MvqTwsGe922GRvPIG1Xs9qb67H+EWTY02y0L2LU1C67O3WLzWoA7QdKqESHBJVgu1FUcI/OHUZMJK3jzZvksMTdjTgK7DVH2EDFVEjummCN2xuhCb203DxNnil2hltDJX5TQJhj2zM1SZgiuiT+4ux+SiFllBW0+MapskmvXRaNUFAYFDqmkxbzQoCERZ7HFbszWZZ/IIq6GOl/ca+3qtJWttcTs8XWRPEm8YHBFVOiB9FpQ28F/9yuh+6UUeFkSZA3ExH+txQiK+SlUZlYRmes6aXO7z/V65zTPWMOPPWaCEOm6FOsJKthafYQmRW8xP6tP6B7RAqey9bQ+Ai0qzm4yC54vLscgvSh4TGUL7hzBuXIeFtuVogcqXllSPxWRmnv+8ql1z7BlpdiRRPQn0bCD6m0DDZx7tsET6z7FaTE4Swo+bbV26zXz0roxJ8we2vaAtgBbIp/1el8s7ap7/h86/4wIrWOBW93rJLpf5aRlw5HmBYtNNLtulH7ijFHfQOovERqUqgJmoFuUQOx6NbZlbPzgC85+5wPbLDT2+isNtjqQAYFJ98uv8KSL5TjDvjrUEcN28OVxrBgj3je79E3RyXAdLJxjWKCWXOV3cuxFWl3TJNYnQ4PXEbHivRZS76fBMTv27wHGK7/jgfPsryH9e3HHTBKrzT2/8MHEWn/uUXWBONsCIesb9f1YReV9wJie5Uxutg1BxhKxkTZuiAy6hS67K8P0s80Zp2+GKQSCYJN37XUFDvcaGhR17AqeMPyjZITFOqeI4Mit/BDfEyJlEgqUPdlQi+D6m1X5yQt6Tav3pkR4s9nMC9UkXl+1kiHWDxzU668oDvmM5Si7keUvZVYvJlN6ga5aTZM2DAd1WyZ6tJ3RQXYzSUUMfJj72My8LBu28fKFuY7jg8kaCo708gvZfc2r49/IgQ8fPjy/AWazpA3p8lw6plIfzYRROiuWLbtNVsQx5wng+BznrtD3qRdT9CzUyaEB4bgwls60be4NTtdYqlbt4kWk3MvNEcRmPkAUH6/m2P83dzap/ydSwPSgDFSweteKK2I4lNriysode7HzsqmlsKFxgZvAxjLJWqCQtUw/rT71I93iEDac3QmdDPBmhi3NUuu7IZeqpfvfMyittJqH9cahszA97zl42MTQU8YUDxjQR3jbyG8r1Sr4J41j8D88+2oACW/fwvb2+sXFwB7xtRPqNZhhl4FGbReaNUB0y7k2JL5O9i3/2xn/t7kSO1lVuyhL4aVzsmlg5Zz9tVxF6yZ8Soulo0HUrInJdzAKM6i8vPIOsRsXv1xZv6huGupfzEx4C8TrHF6rioFxwB0p7LMPpfzG9mpTLOV3QlSyBB5UQP/AVv1gFp9d+zZ1mDWPNZr1nLJeL7ZWYrmS2QCqy8sh/pb+B0sCuVtqEwAA\n    path: /opt/installmongodb.sh\n    permissions: \"0744\"\n -  encoding: gzip\n    content: !!binary |\n        H4sIAPYFNlwCA5WRz0rEMBDG73mKsduDijW7Fw/CHoRF8OCfV0jS6TaYJiUZuyzqu5uYLhtFBS8JzMz3+z5mFidcasulCD1jAQkaZGwBG+y0RZiE10IaDGzzeH9z97CuV6nr0eIOFHpi6ZGOcin1lBtkkhpBGAgMUkCr/H4k6HQkQec8DM5uXZqOLu1htHsxRvVC2/PLEQcWebF6G4vr+tQEaCbgSIoXRC686vWEvKpzvop/hcAbkNAGGgurM4aqd1DVR3D1PcLo9fSM+zLAUyz9J0CJ+MM+YatyX+TyVj6tlSB4LYJeFKr3REXMWUIw/CiLuHRCr7c9FYvOyH5wLVwtlz8JY7KdzcOtvJ7/Xxx8zCE8zTcM6CetcNYemuwDY5zi9FcCAAA=\n    path: /opt/renew_mongo_cert.sh\n    permissions: \"0744\"\n\n')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[variables('sshKeyPath')]",
                                    "keyData": "[parameters('adminSSHKeyData')]"
                                }
                            ]
                        }
                    },
                    "adminUsername": "[parameters('adminUsername')]",
                    "allowExtensionOperations": true
                }
            },
            "tags": {}
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmName'), copyIndex(), '/configureagent')]",
            "apiVersion": "2017-12-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'), copyIndex())]"
            ],
            "copy": {
                "name": "mongo-rs-ca",
                "count": "[parameters('clusterSize')]"
            },
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "timestamp": 4
                },
                "protectedSettings": {
                    "commandToExecute": "[concat(' VM_INDEX=', copyIndex(), ' CLUSTER_SIZE=', parameters('clusterSize'), ' CERT_EMAIL=', parameters('certificateEmail'),' MONGODB_USERNAME=', parameters('mongoDBUsername'),' MONGODB_PASSWORD=', parameters('mongoDBPassword'),' APP_DNS_NAME=', reference(resourceId('Microsoft.Network/publicIPAddresses',concat(variables('publicIPAddressName'),copyIndex())),'2017-10-01').dnsSettings.fqdn, ' /bin/bash /opt/installmongodb.sh')]"
                }
            }
        }
    ],
    "outputs": {
        "mongoDBUser": {
            "value": "[parameters('mongoDBUsername')]",
            "type": "string"
        },
        "mongoDBPassword": {
            "value": "[parameters('mongoDBPassword')]",
            "type": "string"
        },
        "mongoClusterSize": {
            "value": "[parameters('clusterSize')]",
            "type": "int"
        },
        "dnsNames": {
            "value": "[variables('dnsNames')]",
            "type": "array"
        }
    }
}
