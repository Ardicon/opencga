{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "vmSize": {
            "type": "string",
            "metadata": {
                "description": "Size of vm (e.g. Standard_D1_v2)"
            },
            "defaultValue": "Standard_D1_v2"
        },
        "dnsLabelPrefix": {
            "type": "string",
            "defaultValue": "cgamongo",
            "metadata": {
                "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
            }
        },
        "certificateEmail": {
            "type": "string",
            "metadata": {
                "description": "Email address used for mongoDB letsencrypt certificates"
            }
        },
        "clusterSize": {
            "type": "int",
            "defaultValue": 3,
            "allowedValues": [1, 3, 5, 7, 9, 11],
            "metadata": {
                "description": "Amount of VMs to deploy for the mongodb replica set"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "The username for all mongoDB VMs (also used for connecting oer SSH)"
            }
        },
        "adminSSHKeyData": {
            "type": "string",
            "metadata": {
                "description": "The mongoDB VM public SSH key"
            }
        },
        "mongoDBUsername": {
            "type": "string",
            "defaultValue": "opencga",
            "metadata": {
                "description": "The username for connecting to mongoDB"
            }
        },
        "mongoDBPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password for connecting to mongoDB"
            }
        },
        "subnetId": {
            "type": "string",
            "metadata": {
                "description": "Subnet ID"
            }
        },
        "LogAnalyticsWorkspaceID": {
            "type": "string",
            "metadata": {
                "description": "Log Analytics Workspace ID"
            }
        },
        "logAnalyticsWorkSpaceKey":{
            "type": "string",
            "metadata": {
                "description": "Log Analytics Workspace Key"
            }
        },
        "LogAnalyticsWorkspaceResourceID": {
            "type": "string",
            "metadata": {
                "description": "Log Analytics Workspace Resource ID"
            }
        }
    },
    "variables": {
        "vmName": "mongo-vm",
        "nicName": "mongo-nic",
        "publicIPAddressName": "mongo-publicip",
        "publicIPAddressType": "Static",
        "dnsPrefix": "[concat(parameters('dnsLabelPrefix'), uniquestring(resourceGroup().id))]",
        "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
        "copy": [
            {
                "name": "dnsNames",
                "count": "[parameters('clusterSize')]",
                "input": {
                   "fqdn": "[concat(variables('dnsPrefix'),copyIndex('dnsNames'),'.',parameters('location'),'.cloudapp.azure.com')]"
                }
            }
        ],
        "logAnalyticsAgent": "[concat('docker run --privileged -d -v /var/run/docker.sock:/var/run/docker.sock -v /var/log:/var/log -v /var/lib/docker/containers:/var/lib/docker/containers -e WSID=',parameters('logAnalyticsWorkSpaceID'),' -e KEY=',parameters('logAnalyticsWorkSpaceKey'),' -p 127.0.0.1:25225:25225 -p 127.0.0.1:25224:25224/udp --name=omsagent -h=`hostname` --restart=always microsoft/oms')]",
        "fqdn": "[concat(variables('dnsPrefix'),'#VM_INDEX#','.',parameters('location'),'.cloudapp.azure.com')]",
        "cloudInit": [
            "#cloud-config",
            "",
            "package_upgrade: true",
            "package_reboot_if_required: true",
            "",
            "write_files:",
            "- encoding: gzip",
            "  path: /opt/installmongodb.sh",
            "  permissions: \"0744\"",
            "  content: !!binary |",
            "    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",
            "",
            "- encoding: gzip",
            "  content: !!binary |",
            "    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",
            "  path: /opt/renew_mongo_cert.sh",
            "  permissions: \"0744\"",
            "",
            "runcmd:",
            "- export DEBIAN_FRONTEND='noninteractive'",
            "- curl -fsSL https://get.docker.com/ | sh",
            "- curl -fsSL https://get.docker.com/gpg | sudo apt-key add -",
            "[concat('- ', variables('logAnalyticsAgent'))]",
            "[concat('- VM_INDEX=#VM_INDEX# CLUSTER_SIZE=', parameters('clusterSize'), ' CERT_EMAIL=', parameters('certificateEmail'),' MONGODB_USERNAME=', parameters('mongoDBUsername'),' MONGODB_PASSWORD=', parameters('mongoDBPassword'),' APP_DNS_NAME=', variables('fqdn'), ' /bin/bash /opt/installmongodb.sh')]"
        ]
    },
    "resources": [
        {
            "apiVersion": "2017-10-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicName'), copyIndex())]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "mongo-ip",
                "count": "[parameters('clusterSize')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'), copyIndex())]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIPAddressName'), copyIndex()))]"
                            },
                            "subnet": {
                                "id": "[parameters('subnetId')]"
                            }
                        }
                    }
                ]
            },
            "resources": [
                {
                    "type": "providers/diagnosticSettings",
                    "name": "[concat('Microsoft.Insights/', concat(variables('nicName'), copyIndex()))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'), copyIndex()))]"
                    ],
                    "apiVersion": "2017-05-01-preview",
                    "properties": {
                      "name": "[concat(variables('nicName'), copyIndex())]",
                      "workspaceId": "[parameters('LogAnalyticsWorkspaceResourceID')]",
                      "logs": [

                      ],
                      "metrics": [
                        {
                          "category": "AllMetrics",
                          "enabled": true,
                          "retentionPolicy": {
                            "enabled": false,
                            "days": 0
                          }
                        }
                      ]
                    }
                  }
            ]
        },
        {
            "apiVersion": "2017-10-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(variables('publicIPAddressName'), copyIndex())]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "mongo-ip",
                "count": "[parameters('clusterSize')]"
            },
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[concat(variables('dnsPrefix'), copyIndex())]"
                }
            }
        },
        {
            "name": "[concat(variables('vmName'), copyIndex())]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2018-06-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), copyIndex())]"
            ],
            "copy": {
                "name": "mongo-rs",
                "count": "[parameters('clusterSize')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "osType": "Linux",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS"
                        }
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": 1023,
                            "lun": 0,
                            "createOption": "Empty"
                        }
                    ],
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "16.04-LTS",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'), copyIndex()))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[concat(variables('vmName'), copyIndex())]",
                    "customData": "[base64(replace(replace(replace(replace(string(variables('cloudInit')),'#VM_INDEX#',string(copyIndex())),'\",\"','\n'),'[\"',''),'\"]',''))]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[variables('sshKeyPath')]",
                                    "keyData": "[parameters('adminSSHKeyData')]"
                                }
                            ]
                        }
                    },
                    "adminUsername": "[parameters('adminUsername')]",
                    "allowExtensionOperations": true
                }
            },
            "tags": {}
        }
    ],
    "outputs": {
        "mongoDBUser": {
            "value": "[parameters('mongoDBUsername')]",
            "type": "string"
        },
        "mongoDBPassword": {
            "value": "[parameters('mongoDBPassword')]",
            "type": "string"
        },
        "mongoClusterSize": {
            "value": "[parameters('clusterSize')]",
            "type": "int"
        },
        "dnsNames": {
            "value": "[variables('dnsNames')]",
            "type": "array"
        }
    }
}
