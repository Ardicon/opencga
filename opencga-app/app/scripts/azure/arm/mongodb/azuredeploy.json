{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "vmSize": {
            "type": "string",
            "metadata": {
                "description": "Size of vm (e.g. Standard_D1_v2)"
            },
            "defaultValue": "Standard_D1_v2"
        },
        "dnsLabelPrefix": {
            "type": "string",
            "defaultValue": "cgamongo",
            "metadata": {
                "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
            }
        },
        "certificateEmail": {
            "type": "string",
            "metadata": {
                "description": "Email address used for mongoDB letsencrypt certificates"
            }
        },
        "clusterSize": {
            "type": "int",
            "defaultValue": 3,
            "allowedValues": [1, 3, 5, 7, 9, 11],
            "metadata": {
                "description": "Amount of VMs to deploy for the mongodb replica set"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "The username for all mongoDB VMs (also used for connecting oer SSH)"
            }
        },
        "adminSSHKeyData": {
            "type": "string",
            "metadata": {
                "description": "The mongoDB VM public SSH key"
            }
        },
        "mongoDBUsername": {
            "type": "string",
            "defaultValue": "opencga",
            "metadata": {
                "description": "The username for connecting to mongoDB"
            }
        },
        "mongoDBPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password for connecting to mongoDB"
            }
        },
        "subnetId": {
            "type": "string",
            "metadata": {
                "description": "Subnet ID"
            }
        }
    },
    "variables": {
        "vmName": "mongo-vm",
        "nicName": "mongo-nic",
        "publicIPAddressName": "mongo-publicip",
        "publicIPAddressType": "Static",
        "dnsPrefix": "[concat(parameters('dnsLabelPrefix'), uniquestring(resourceGroup().id))]",
        "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
        "copy": [
            {
                "name": "dnsNames",
                "count": "[parameters('clusterSize')]",
                "input": {
                   "fqdn": "[concat(variables('dnsPrefix'),copyIndex('dnsNames'),'.',parameters('location'),'.cloudapp.azure.com')]"
                }
            }
        ]
    },
    "resources": [
        {
            "apiVersion": "2017-10-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicName'), copyIndex())]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "mongo-ip",
                "count": "[parameters('clusterSize')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'), copyIndex())]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIPAddressName'), copyIndex()))]"
                            },
                            "subnet": {
                                "id": "[parameters('subnetId')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2017-10-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(variables('publicIPAddressName'), copyIndex())]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "mongo-ip",
                "count": "[parameters('clusterSize')]"
            },
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[concat(variables('dnsPrefix'), copyIndex())]"
                }
            }
        },
        {
            "name": "[concat(variables('vmName'), copyIndex())]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2018-06-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), copyIndex())]"
            ],
            "copy": {
                "name": "mongo-rs",
                "count": "[parameters('clusterSize')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "osType": "Linux",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS"
                        }
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": 1023,
                            "lun": 0,
                            "createOption": "Empty"
                        }
                    ],
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "16.04-LTS",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'), copyIndex()))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[concat(variables('vmName'), copyIndex())]",
                    "customData": "[base64('#cloud-config\n\nwrite_files:\n -  encoding: gzip\n    content: !!binary |\n        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\n    path: /opt/installmongodb.sh\n    permissions: \"0744\"\n -  encoding: gzip\n    content: !!binary |\n        H4sIAPYFNlwCA5WRz0rEMBDG73mKsduDijW7Fw/CHoRF8OCfV0jS6TaYJiUZuyzqu5uYLhtFBS8JzMz3+z5mFidcasulCD1jAQkaZGwBG+y0RZiE10IaDGzzeH9z97CuV6nr0eIOFHpi6ZGOcin1lBtkkhpBGAgMUkCr/H4k6HQkQec8DM5uXZqOLu1htHsxRvVC2/PLEQcWebF6G4vr+tQEaCbgSIoXRC686vWEvKpzvop/hcAbkNAGGgurM4aqd1DVR3D1PcLo9fSM+zLAUyz9J0CJ+MM+YatyX+TyVj6tlSB4LYJeFKr3REXMWUIw/CiLuHRCr7c9FYvOyH5wLVwtlz8JY7KdzcOtvJ7/Xxx8zCE8zTcM6CetcNYemuwDY5zi9FcCAAA=\n    path: /opt/renew_mongo_cert.sh\n    permissions: \"0744\"\n\n')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[variables('sshKeyPath')]",
                                    "keyData": "[parameters('adminSSHKeyData')]"
                                }
                            ]
                        }
                    },
                    "adminUsername": "[parameters('adminUsername')]",
                    "allowExtensionOperations": true
                }
            },
            "tags": {}
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmName'), copyIndex(), '/configureagent')]",
            "apiVersion": "2017-12-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'), copyIndex())]"
            ],
            "copy": {
                "name": "mongo-rs-ca",
                "count": "[parameters('clusterSize')]"
            },
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "timestamp": 4
                },
                "protectedSettings": {
                    "commandToExecute": "[concat(' VM_INDEX=', copyIndex(), ' CLUSTER_SIZE=', parameters('clusterSize'), ' CERT_EMAIL=', parameters('certificateEmail'),' MONGODB_USERNAME=', parameters('mongoDBUsername'),' MONGODB_PASSWORD=', parameters('mongoDBPassword'),' APP_DNS_NAME=', reference(resourceId('Microsoft.Network/publicIPAddresses',concat(variables('publicIPAddressName'),copyIndex())),'2017-10-01').dnsSettings.fqdn, ' /bin/bash /opt/installmongodb.sh')]"
                }
            }
        }
    ],
    "outputs": {
        "mongoDBUser": {
            "value": "[parameters('mongoDBUsername')]",
            "type": "string"
        },
        "mongoDBPassword": {
            "value": "[parameters('mongoDBPassword')]",
            "type": "string"
        },
        "mongoClusterSize": {
            "value": "[parameters('clusterSize')]",
            "type": "int"
        },
        "dnsNames": {
            "value": "[variables('dnsNames')]",
            "type": "array"
        }
    }
}
