{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "vmSize": {
            "type": "string",
            "metadata": {
                "description": "Size of vm (e.g. Standard_D1_v2)"
            },
            "defaultValue": "Standard_D1_v2"
        },
        "dnsLabelPrefix": {
            "type": "string",
            "defaultValue": "cgamongo",
            "metadata": {
                "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
            }
        },
        "certificateEmail": {
            "type": "string",
            "metadata": {
                "description": "Email address used for mongoDB letsencrypt certificates"
            }
        },
        "clusterSize": {
            "type": "int",
            "defaultValue": 3,
            "allowedValues": [1, 3, 5, 7, 9, 11],
            "metadata": {
                "description": "Amount of VMs to deploy for the mongodb replica set"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "The username for all mongoDB VMs (also used for connecting oer SSH)"
            }
        },
        "adminSSHKeyData": {
            "type": "string",
            "metadata": {
                "description": "The mongoDB VM public SSH key"
            }
        },
        "mongoDBUsername": {
            "type": "string",
            "defaultValue": "opencga",
            "metadata": {
                "description": "The username for connecting to mongoDB"
            }
        },
        "mongoDBPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password for connecting to mongoDB"
            }
        },
        "subnetId": {
            "type": "string",
            "metadata": {
                "description": "Subnet ID"
            }
        }
    },
    "variables": {
        "vmName": "mongo-vm",
        "nicName": "mongo-nic",
        "publicIPAddressName": "mongo-publicip",
        "publicIPAddressType": "Static",
        "dnsPrefix": "[concat(parameters('dnsLabelPrefix'), uniquestring(resourceGroup().id))]",
        "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
        "copy": [
            {
                "name": "dnsNames",
                "count": "[parameters('clusterSize')]",
                "input": {
                   "fqdn": "[concat(variables('dnsPrefix'),copyIndex('dnsNames'),'.',parameters('location'),'.cloudapp.azure.com')]"
                }
            }
        ]
    },
    "resources": [
        {
            "apiVersion": "2017-10-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicName'), copyIndex())]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "mongo-ip",
                "count": "[parameters('clusterSize')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'), copyIndex())]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIPAddressName'), copyIndex()))]"
                            },
                            "subnet": {
                                "id": "[parameters('subnetId')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2017-10-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(variables('publicIPAddressName'), copyIndex())]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "mongo-ip",
                "count": "[parameters('clusterSize')]"
            },
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[concat(variables('dnsPrefix'), copyIndex())]"
                }
            }
        },
        {
            "name": "[concat(variables('vmName'), copyIndex())]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2018-06-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), copyIndex())]"
            ],
            "copy": {
                "name": "mongo-rs",
                "count": "[parameters('clusterSize')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "osType": "Linux",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS"
                        }
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": 1023,
                            "lun": 0,
                            "createOption": "Empty"
                        }
                    ],
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "16.04-LTS",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'), copyIndex()))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[concat(variables('vmName'), copyIndex())]",
                    "customData": "[base64('#cloud-config\n\nwrite_files:\n -  encoding: gzip\n    content: !!binary |\n        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\n    path: /opt/installmongodb.sh\n    permissions: \"0744\"\n -  encoding: gzip\n    content: !!binary |\n        H4sIAPYFNlwCA5WRz0rEMBDG73mKsduDijW7Fw/CHoRF8OCfV0jS6TaYJiUZuyzqu5uYLhtFBS8JzMz3+z5mFidcasulCD1jAQkaZGwBG+y0RZiE10IaDGzzeH9z97CuV6nr0eIOFHpi6ZGOcin1lBtkkhpBGAgMUkCr/H4k6HQkQec8DM5uXZqOLu1htHsxRvVC2/PLEQcWebF6G4vr+tQEaCbgSIoXRC686vWEvKpzvop/hcAbkNAGGgurM4aqd1DVR3D1PcLo9fSM+zLAUyz9J0CJ+MM+YatyX+TyVj6tlSB4LYJeFKr3REXMWUIw/CiLuHRCr7c9FYvOyH5wLVwtlz8JY7KdzcOtvJ7/Xxx8zCE8zTcM6CetcNYemuwDY5zi9FcCAAA=\n    path: /opt/renew_mongo_cert.sh\n    permissions: \"0744\"\n\n')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[variables('sshKeyPath')]",
                                    "keyData": "[parameters('adminSSHKeyData')]"
                                }
                            ]
                        }
                    },
                    "adminUsername": "[parameters('adminUsername')]",
                    "allowExtensionOperations": true
                }
            },
            "tags": {}
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmName'), copyIndex(), '/configureagent')]",
            "apiVersion": "2017-12-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'), copyIndex())]"
            ],
            "copy": {
                "name": "mongo-rs-ca",
                "count": "[parameters('clusterSize')]"
            },
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "timestamp": 4
                },
                "protectedSettings": {
                    "commandToExecute": "[concat(' VM_INDEX=', copyIndex(), ' CLUSTER_SIZE=', parameters('clusterSize'), ' CERT_EMAIL=', parameters('certificateEmail'),' MONGODB_USERNAME=', parameters('mongoDBUsername'),' MONGODB_PASSWORD=', parameters('mongoDBPassword'),' APP_DNS_NAME=', reference(resourceId('Microsoft.Network/publicIPAddresses',concat(variables('publicIPAddressName'),copyIndex())),'2017-10-01').dnsSettings.fqdn, ' /bin/bash /opt/installmongodb.sh')]"
                }
            }
        }
    ],
    "outputs": {
        "mongoDBUser": {
            "value": "[parameters('mongoDBUsername')]",
            "type": "string"
        },
        "mongoDBPassword": {
            "value": "[parameters('mongoDBPassword')]",
            "type": "string"
        },
        "mongoClusterSize": {
            "value": "[parameters('clusterSize')]",
            "type": "int"
        },
        "dnsNames": {
            "value": "[variables('dnsNames')]",
            "type": "array"
        }
    }
}
