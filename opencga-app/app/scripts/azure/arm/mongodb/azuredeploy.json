{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "vmSize": {
            "type": "string",
            "metadata": {
                "description": "Size of vm (e.g. Standard_D1_v2)"
            },
            "defaultValue": "Standard_D1_v2"
        },
        "dnsLabelPrefix": {
            "type": "string",
            "defaultValue": "cgamongo",
            "metadata": {
                "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
            }
        },
        "certificateEmail": {
            "type": "string",
            "metadata": {
                "description": "Email address used for mongoDB letsencrypt certificates"
            }
        },
        "clusterSize": {
            "type": "int",
            "defaultValue": 3,
            "allowedValues": [1, 3, 5, 7, 9, 11],
            "metadata": {
                "description": "Amount of VMs to deploy for the mongodb replica set"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "The username for all mongoDB VMs (also used for connecting oer SSH)"
            }
        },
        "adminSSHKeyData": {
            "type": "string",
            "metadata": {
                "description": "The mongoDB VM public SSH key"
            }
        },
        "mongoDBUsername": {
            "type": "string",
            "defaultValue": "opencga",
            "metadata": {
                "description": "The username for connecting to mongoDB"
            }
        },
        "mongoDBPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password for connecting to mongoDB"
            }
        },
        "subnetId": {
            "type": "string",
            "metadata": {
                "description": "Subnet ID"
            }
        }
    },
    "variables": {
        "vmName": "mongo-vm",
        "nicName": "mongo-nic",
        "publicIPAddressName": "mongo-publicip",
        "publicIPAddressType": "Static",
        "dnsPrefix": "[concat(parameters('dnsLabelPrefix'), uniquestring(resourceGroup().id))]",
        "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
        "copy": [
            {
                "name": "dnsNames",
                "count": "[parameters('clusterSize')]",
                "input": {
                   "fqdn": "[concat(variables('dnsPrefix'),copyIndex('dnsNames'),'.',parameters('location'),'.cloudapp.azure.com')]"
                }
            }
        ]
    },
    "resources": [
        {
            "apiVersion": "2017-10-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicName'), copyIndex())]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "mongo-ip",
                "count": "[parameters('clusterSize')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'), copyIndex())]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIPAddressName'), copyIndex()))]"
                            },
                            "subnet": {
                                "id": "[parameters('subnetId')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2017-10-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(variables('publicIPAddressName'), copyIndex())]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "mongo-ip",
                "count": "[parameters('clusterSize')]"
            },
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[concat(variables('dnsPrefix'), copyIndex())]"
                }
            }
        },
        {
            "name": "[concat(variables('vmName'), copyIndex())]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2018-06-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), copyIndex())]"
            ],
            "copy": {
                "name": "mongo-rs",
                "count": "[parameters('clusterSize')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "osType": "Linux",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS"
                        }
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": 1023,
                            "lun": 0,
                            "createOption": "Empty"
                        }
                    ],
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "16.04-LTS",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'), copyIndex()))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[concat(variables('vmName'), copyIndex())]",
                    "customData": "[base64('#cloud-config\n\nwrite_files:\n -  encoding: gzip\n    content: !!binary |\n        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\n    path: /opt/installmongodb.sh\n    permissions: \"0744\"\n -  encoding: gzip\n    content: !!binary |\n        H4sIAPYFNlwCA5WRz0rEMBDG73mKsduDijW7Fw/CHoRF8OCfV0jS6TaYJiUZuyzqu5uYLhtFBS8JzMz3+z5mFidcasulCD1jAQkaZGwBG+y0RZiE10IaDGzzeH9z97CuV6nr0eIOFHpi6ZGOcin1lBtkkhpBGAgMUkCr/H4k6HQkQec8DM5uXZqOLu1htHsxRvVC2/PLEQcWebF6G4vr+tQEaCbgSIoXRC686vWEvKpzvop/hcAbkNAGGgurM4aqd1DVR3D1PcLo9fSM+zLAUyz9J0CJ+MM+YatyX+TyVj6tlSB4LYJeFKr3REXMWUIw/CiLuHRCr7c9FYvOyH5wLVwtlz8JY7KdzcOtvJ7/Xxx8zCE8zTcM6CetcNYemuwDY5zi9FcCAAA=\n    path: /opt/renew_mongo_cert.sh\n    permissions: \"0744\"\n\n')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[variables('sshKeyPath')]",
                                    "keyData": "[parameters('adminSSHKeyData')]"
                                }
                            ]
                        }
                    },
                    "adminUsername": "[parameters('adminUsername')]",
                    "allowExtensionOperations": true
                }
            },
            "tags": {}
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmName'), copyIndex(), '/configureagent')]",
            "apiVersion": "2017-12-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'), copyIndex())]"
            ],
            "copy": {
                "name": "mongo-rs-ca",
                "count": "[parameters('clusterSize')]"
            },
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "timestamp": 4
                },
                "protectedSettings": {
                    "commandToExecute": "[concat(' VM_INDEX=', copyIndex(), ' CLUSTER_SIZE=', parameters('clusterSize'), ' CERT_EMAIL=', parameters('certificateEmail'),' MONGODB_USERNAME=', parameters('mongoDBUsername'),' MONGODB_PASSWORD=', parameters('mongoDBPassword'),' APP_DNS_NAME=', reference(resourceId('Microsoft.Network/publicIPAddresses',concat(variables('publicIPAddressName'),copyIndex())),'2017-10-01').dnsSettings.fqdn, ' /bin/bash /opt/installmongodb.sh')]"
                }
            }
        }
    ],
    "outputs": {
        "mongoDBUser": {
            "value": "[parameters('mongoDBUsername')]",
            "type": "string"
        },
        "mongoDBPassword": {
            "value": "[parameters('mongoDBPassword')]",
            "type": "string"
        },
        "mongoClusterSize": {
            "value": "[parameters('clusterSize')]",
            "type": "int"
        },
        "dnsNames": {
            "value": "[variables('dnsNames')]",
            "type": "array"
        }
    }
}
